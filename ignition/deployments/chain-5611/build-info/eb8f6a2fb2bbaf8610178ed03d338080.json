{
  "id": "eb8f6a2fb2bbaf8610178ed03d338080",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.30",
  "solcLongVersion": "0.8.30+commit.73712a01",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
      },
      "contract/AdminCertificateHelper.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\nimport \"./Owned.sol\";\nimport \"./interfaces/ICertVerifier.sol\";\nimport \"./interfaces/IAdminCertificateHelper.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\ncontract AdminCertificateHelper is IAdminCertificateHelper, Owned {\n\n  ICertVerifier internal certVerifier;\n\n  address internal admin;\n  ChunkedX509Cert[] internal certsChain;\n  uint256 internal rootCertId;\n  uint256 internal signatureNonce;\n  bytes32 internal authorizedSolutionHash;\n\n  event CertVerifierSet(ICertVerifier indexed oldCertVerifier, ICertVerifier indexed newCertVerifier);\n  event SetAdmin(address indexed oldAdmin, address indexed newAdmin, ChunkedX509Cert[] certsChain, uint256 rootCertId);\n  event SetAuthorizedSolutionHash(bytes32 indexed oldAuthorizedSolutionHash, bytes32 indexed newAuthorizedSolutionHash);\n\n  constructor(ICertVerifier _certVerifier,bytes32 _authorizedSolutionHash){\n    _setCertVerifier(_certVerifier);\n    _setAuthorizedSolutionHash(_authorizedSolutionHash);\n  }\n\n  function setCertVerifier(ICertVerifier _certVerifier) external onlyOwner() {\n    _setCertVerifier(_certVerifier);\n  }\n  \n  function setAuthorizedSolutionHash(bytes32 _authorizedSolutionHash) external onlyOwner() {\n    _setAuthorizedSolutionHash(_authorizedSolutionHash);\n  }\n\n  function addAdmin(ChunkedX509Cert[] calldata _certsChain, uint256 _rootCertId,bytes calldata signature) external {\n    certVerifier.verifyCertChain(_certsChain, _rootCertId);\n    require(_certsChain[0].userData==authorizedSolutionHash,\"Only authorized solution\");\n\n    address newAdmin=msg.sender;\n    bytes32 dataHash=sha256(abi.encode(newAdmin,block.chainid,address(this),signatureNonce));\n    address signer=ECDSA.recover(dataHash, signature);\n    require(signer==address(uint160(uint256(keccak256(_certsChain[0].publicKey)))),\"Invalid data signature\");\n    signatureNonce++;\n\n    address oldAdmin=admin;\n    admin=newAdmin;\n    certsChain=_certsChain;\n    rootCertId=_rootCertId;\n    emit SetAdmin(oldAdmin,newAdmin, _certsChain, _rootCertId);\n  }\n\n  function isAdmin(address caller) external view override returns(bool){\n    return admin==caller;\n  }\n\n  function getAdminData() external view returns(address _admin,ChunkedX509Cert[] memory _certsChain, uint256 _rootCertId){\n    return (admin,certsChain,rootCertId);\n  }\n\n  function getCertVerifier() external view returns(ICertVerifier){\n    return certVerifier;\n  }\n\n  function getAuthorizedSolutionHash() external view returns(bytes32){\n    return authorizedSolutionHash;\n  }\n\n  function getSignatureNonce() external view returns(uint256){\n    return signatureNonce;\n  }\n\n  function _setCertVerifier(ICertVerifier _certVerifier) internal {\n    require(address(_certVerifier) != address(0),\"certVerifier cannot be zero address\");\n    emit CertVerifierSet(certVerifier, _certVerifier);\n    certVerifier = _certVerifier;\n  }\n\n  function _setAuthorizedSolutionHash(bytes32 _authorizedSolutionHash) internal {\n    require(_authorizedSolutionHash != 0,\"AuthorizedSolutionHash cannot be zero\");\n    emit SetAuthorizedSolutionHash(authorizedSolutionHash, _authorizedSolutionHash);\n    authorizedSolutionHash = _authorizedSolutionHash;\n  }\n\n}\n"
      },
      "contract/interfaces/IAdminCertificateHelper.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\ninterface IAdminCertificateHelper {\n    function isAdmin(address caller) external view returns(bool);\n}\n"
      },
      "contract/interfaces/ICertVerifier.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../types/ChunkedX509Cert.sol\";\n\ninterface ICertVerifier {\n    function verifyCertChain(ChunkedX509Cert[] calldata certsChain, uint256 rootCertId) external view returns (bytes32 leafCertHash);\n}\n"
      },
      "contract/Owned.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.30;\n\n/**\n * @title The Owned contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract Owned {\n\n  address payable public owner;\n  address private pendingOwner;\n\n  event OwnershipTransferRequested(\n    address indexed from,\n    address indexed to\n  );\n  event OwnershipTransferred(\n    address indexed from,\n    address indexed to\n  );\n\n  constructor() {\n    owner = payable(msg.sender);\n  }\n\n  /**\n   * @dev Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address _to)\n    external\n    onlyOwner()\n  {\n    pendingOwner = _to;\n\n    emit OwnershipTransferRequested(owner, _to);\n  }\n\n  /**\n   * @dev Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership()\n    external\n  {\n    require(msg.sender == pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = owner;\n    owner = payable(msg.sender);\n    pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @dev Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"Only callable by owner\");\n    _;\n  }\n\n}\n"
      },
      "contract/types/ChunkedX509Cert.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nstruct ChunkedX509Cert {\n    bytes[] nonSerializedParts;\n    bytes expirationDate;\n    bytes ca; // certificate authority\n    bytes32 userData;\n    bytes publicKey;\n    bytes serialNumber;\n    bytes32 mrEnclave;\n    bytes32 mrSigner;\n    bytes signature;\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 5000
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
          "exportedSymbols": {
            "ECDSA": [
              347
            ]
          },
          "id": 348,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ECDSA",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "138:205:0",
                "text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
              },
              "fullyImplemented": true,
              "id": 347,
              "linearizedBaseContracts": [
                347
              ],
              "name": "ECDSA",
              "nameLocation": "352:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ECDSA.RecoverError",
                  "id": 7,
                  "members": [
                    {
                      "id": 3,
                      "name": "NoError",
                      "nameLocation": "392:7:0",
                      "nodeType": "EnumValue",
                      "src": "392:7:0"
                    },
                    {
                      "id": 4,
                      "name": "InvalidSignature",
                      "nameLocation": "409:16:0",
                      "nodeType": "EnumValue",
                      "src": "409:16:0"
                    },
                    {
                      "id": 5,
                      "name": "InvalidSignatureLength",
                      "nameLocation": "435:22:0",
                      "nodeType": "EnumValue",
                      "src": "435:22:0"
                    },
                    {
                      "id": 6,
                      "name": "InvalidSignatureS",
                      "nameLocation": "467:17:0",
                      "nodeType": "EnumValue",
                      "src": "467:17:0"
                    }
                  ],
                  "name": "RecoverError",
                  "nameLocation": "369:12:0",
                  "nodeType": "EnumDefinition",
                  "src": "364:126:0"
                },
                {
                  "documentation": {
                    "id": 8,
                    "nodeType": "StructuredDocumentation",
                    "src": "496:63:0",
                    "text": " @dev The signature derives the `address(0)`."
                  },
                  "errorSelector": "f645eedf",
                  "id": 10,
                  "name": "ECDSAInvalidSignature",
                  "nameLocation": "570:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "591:2:0"
                  },
                  "src": "564:30:0"
                },
                {
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "600:60:0",
                    "text": " @dev The signature has an invalid length."
                  },
                  "errorSelector": "fce698f7",
                  "id": 15,
                  "name": "ECDSAInvalidSignatureLength",
                  "nameLocation": "671:27:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "length",
                        "nameLocation": "707:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 15,
                        "src": "699:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "698:16:0"
                  },
                  "src": "665:50:0"
                },
                {
                  "documentation": {
                    "id": 16,
                    "nodeType": "StructuredDocumentation",
                    "src": "721:85:0",
                    "text": " @dev The signature has an S value that is in the upper half order."
                  },
                  "errorSelector": "d78bce0c",
                  "id": 20,
                  "name": "ECDSAInvalidSignatureS",
                  "nameLocation": "817:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "848:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "840:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "840:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "839:11:0"
                  },
                  "src": "811:40:0"
                },
                {
                  "body": {
                    "id": 72,
                    "nodeType": "Block",
                    "src": "2285:622:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 35,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "2299:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2309:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2299:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2319:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "2299:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 70,
                          "nodeType": "Block",
                          "src": "2793:108:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2823:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 58,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2815:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 57,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2815:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 60,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2815:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 61,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7,
                                      "src": "2827:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 62,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2840:22:0",
                                    "memberName": "InvalidSignatureLength",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5,
                                    "src": "2827:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$7",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 65,
                                          "name": "signature",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25,
                                          "src": "2872:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2882:6:0",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "2872:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 64,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2864:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 63,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2864:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 67,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2864:25:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "id": 68,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2814:76:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 34,
                              "id": 69,
                              "nodeType": "Return",
                              "src": "2807:83:0"
                            }
                          ]
                        },
                        "id": 71,
                        "nodeType": "IfStatement",
                        "src": "2295:606:0",
                        "trueBody": {
                          "id": 56,
                          "nodeType": "Block",
                          "src": "2323:464:0",
                          "statements": [
                            {
                              "assignments": [
                                40
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 40,
                                  "mutability": "mutable",
                                  "name": "r",
                                  "nameLocation": "2345:1:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 56,
                                  "src": "2337:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 39,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2337:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 41,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2337:9:0"
                            },
                            {
                              "assignments": [
                                43
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 43,
                                  "mutability": "mutable",
                                  "name": "s",
                                  "nameLocation": "2368:1:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 56,
                                  "src": "2360:9:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 42,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2360:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 44,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2360:9:0"
                            },
                            {
                              "assignments": [
                                46
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 46,
                                  "mutability": "mutable",
                                  "name": "v",
                                  "nameLocation": "2389:1:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 56,
                                  "src": "2383:7:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "typeName": {
                                    "id": 45,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2383:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 47,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2383:7:0"
                            },
                            {
                              "AST": {
                                "nativeSrc": "2560:171:0",
                                "nodeType": "YulBlock",
                                "src": "2560:171:0",
                                "statements": [
                                  {
                                    "nativeSrc": "2578:32:0",
                                    "nodeType": "YulAssignment",
                                    "src": "2578:32:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nativeSrc": "2593:9:0",
                                              "nodeType": "YulIdentifier",
                                              "src": "2593:9:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2604:4:0",
                                              "nodeType": "YulLiteral",
                                              "src": "2604:4:0",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "2589:3:0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2589:3:0"
                                          },
                                          "nativeSrc": "2589:20:0",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2589:20:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "2583:5:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2583:5:0"
                                      },
                                      "nativeSrc": "2583:27:0",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2583:27:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "r",
                                        "nativeSrc": "2578:1:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2578:1:0"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "2627:32:0",
                                    "nodeType": "YulAssignment",
                                    "src": "2627:32:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nativeSrc": "2642:9:0",
                                              "nodeType": "YulIdentifier",
                                              "src": "2642:9:0"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "2653:4:0",
                                              "nodeType": "YulLiteral",
                                              "src": "2653:4:0",
                                              "type": "",
                                              "value": "0x40"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "2638:3:0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2638:3:0"
                                          },
                                          "nativeSrc": "2638:20:0",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2638:20:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "2632:5:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2632:5:0"
                                      },
                                      "nativeSrc": "2632:27:0",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2632:27:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "s",
                                        "nativeSrc": "2627:1:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2627:1:0"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "2676:41:0",
                                    "nodeType": "YulAssignment",
                                    "src": "2676:41:0",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2686:1:0",
                                          "nodeType": "YulLiteral",
                                          "src": "2686:1:0",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "signature",
                                                  "nativeSrc": "2699:9:0",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2699:9:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2710:4:0",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2710:4:0",
                                                  "type": "",
                                                  "value": "0x60"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2695:3:0",
                                                "nodeType": "YulIdentifier",
                                                "src": "2695:3:0"
                                              },
                                              "nativeSrc": "2695:20:0",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2695:20:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "2689:5:0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2689:5:0"
                                          },
                                          "nativeSrc": "2689:27:0",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2689:27:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "byte",
                                        "nativeSrc": "2681:4:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2681:4:0"
                                      },
                                      "nativeSrc": "2681:36:0",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2681:36:0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "v",
                                        "nativeSrc": "2676:1:0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2676:1:0"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 40,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2578:1:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 43,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2627:1:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 25,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2593:9:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 25,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2642:9:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 25,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2699:9:0",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 46,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2676:1:0",
                                  "valueSize": 1
                                }
                              ],
                              "flags": [
                                "memory-safe"
                              ],
                              "id": 48,
                              "nodeType": "InlineAssembly",
                              "src": "2535:196:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 50,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "2762:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 51,
                                    "name": "v",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 46,
                                    "src": "2768:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "id": 52,
                                    "name": "r",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40,
                                    "src": "2771:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 53,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 43,
                                    "src": "2774:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 49,
                                  "name": "tryRecover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    73,
                                    153,
                                    261
                                  ],
                                  "referencedDeclaration": 261,
                                  "src": "2751:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                    "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                                  }
                                },
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2751:25:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 34,
                              "id": 55,
                              "nodeType": "Return",
                              "src": "2744:32:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "857:1267:0",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
                  },
                  "id": 73,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "2138:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "2166:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "2158:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2158:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 25,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "2193:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "2180:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 24,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2180:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2148:60:0"
                  },
                  "returnParameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "recovered",
                        "nameLocation": "2240:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "2232:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2232:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "2264:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "2251:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$7",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 30,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29,
                            "name": "RecoverError",
                            "nameLocations": [
                              "2251:12:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7,
                            "src": "2251:12:0"
                          },
                          "referencedDeclaration": 7,
                          "src": "2251:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$7",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "errArg",
                        "nameLocation": "2277:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 73,
                        "src": "2269:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2269:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2231:53:0"
                  },
                  "scope": 347,
                  "src": "2129:778:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "3801:168:0",
                    "statements": [
                      {
                        "assignments": [
                          84,
                          87,
                          89
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 84,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "3820:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "3812:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 83,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3812:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 87,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "3844:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "3831:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$7",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 86,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 85,
                                "name": "RecoverError",
                                "nameLocations": [
                                  "3831:12:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 7,
                                "src": "3831:12:0"
                              },
                              "referencedDeclaration": 7,
                              "src": "3831:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 89,
                            "mutability": "mutable",
                            "name": "errorArg",
                            "nameLocation": "3859:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "3851:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 88,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3851:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 94,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 91,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76,
                              "src": "3882:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 92,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "3888:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 90,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              73,
                              153,
                              261
                            ],
                            "referencedDeclaration": 73,
                            "src": "3871:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3871:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3811:87:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 96,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "3920:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "id": 97,
                              "name": "errorArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89,
                              "src": "3927:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 95,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "3908:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$7_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3908:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "3908:28:0"
                      },
                      {
                        "expression": {
                          "id": 100,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "3953:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 82,
                        "id": 101,
                        "nodeType": "Return",
                        "src": "3946:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 74,
                    "nodeType": "StructuredDocumentation",
                    "src": "2913:796:0",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "3723:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "3739:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "3731:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 78,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "3758:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "3745:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3745:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3730:38:0"
                  },
                  "returnParameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "3792:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3792:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3791:9:0"
                  },
                  "scope": 347,
                  "src": "3714:255:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "4348:342:0",
                    "statements": [
                      {
                        "id": 151,
                        "nodeType": "UncheckedBlock",
                        "src": "4358:326:0",
                        "statements": [
                          {
                            "assignments": [
                              121
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 121,
                                "mutability": "mutable",
                                "name": "s",
                                "nameLocation": "4390:1:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 151,
                                "src": "4382:9:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "typeName": {
                                  "id": 120,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4382:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 128,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 122,
                                "name": "vs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "4394:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                                    "id": 125,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4407:66:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                      "typeString": "int_const 5789...(69 digits omitted)...9967"
                                    },
                                    "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                      "typeString": "int_const 5789...(69 digits omitted)...9967"
                                    }
                                  ],
                                  "id": 124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4399:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 123,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4399:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4399:75:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "4394:80:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4382:92:0"
                          },
                          {
                            "assignments": [
                              130
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 130,
                                "mutability": "mutable",
                                "name": "v",
                                "nameLocation": "4591:1:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 151,
                                "src": "4585:7:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "typeName": {
                                  "id": 129,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4585:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 143,
                            "initialValue": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 135,
                                              "name": "vs",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 110,
                                              "src": "4610:2:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 134,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4602:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 133,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4602:7:0",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 136,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4602:11:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">>",
                                        "rightExpression": {
                                          "hexValue": "323535",
                                          "id": 137,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4617:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_255_by_1",
                                            "typeString": "int_const 255"
                                          },
                                          "value": "255"
                                        },
                                        "src": "4602:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 139,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4601:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "3237",
                                    "id": 140,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4624:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_27_by_1",
                                      "typeString": "int_const 27"
                                    },
                                    "value": "27"
                                  },
                                  "src": "4601:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4595:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 131,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4595:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4595:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4585:42:0"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 145,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 106,
                                  "src": "4659:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 146,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "4665:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 147,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "4668:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 148,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 121,
                                  "src": "4671:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 144,
                                "name": "tryRecover",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  73,
                                  153,
                                  261
                                ],
                                "referencedDeclaration": 261,
                                "src": "4648:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                  "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4648:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                              }
                            },
                            "functionReturnParameters": 119,
                            "id": 150,
                            "nodeType": "Return",
                            "src": "4641:32:0"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 104,
                    "nodeType": "StructuredDocumentation",
                    "src": "3975:205:0",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
                  },
                  "id": 153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "4194:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 106,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4222:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "4214:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4214:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4244:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "4236:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4236:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4263:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "4255:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4255:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4204:67:0"
                  },
                  "returnParameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "recovered",
                        "nameLocation": "4303:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "4295:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4295:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "4327:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "4314:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$7",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 115,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 114,
                            "name": "RecoverError",
                            "nameLocations": [
                              "4314:12:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7,
                            "src": "4314:12:0"
                          },
                          "referencedDeclaration": 7,
                          "src": "4314:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$7",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "errArg",
                        "nameLocation": "4340:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "4332:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4332:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4294:53:0"
                  },
                  "scope": 347,
                  "src": "4185:505:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 185,
                    "nodeType": "Block",
                    "src": "4903:164:0",
                    "statements": [
                      {
                        "assignments": [
                          166,
                          169,
                          171
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 166,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "4922:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 185,
                            "src": "4914:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 165,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4914:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 169,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "4946:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 185,
                            "src": "4933:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$7",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 168,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 167,
                                "name": "RecoverError",
                                "nameLocations": [
                                  "4933:12:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 7,
                                "src": "4933:12:0"
                              },
                              "referencedDeclaration": 7,
                              "src": "4933:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 171,
                            "mutability": "mutable",
                            "name": "errorArg",
                            "nameLocation": "4961:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 185,
                            "src": "4953:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 170,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4953:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 177,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 173,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "4984:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 174,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "4990:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 175,
                              "name": "vs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "4993:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 172,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              73,
                              153,
                              261
                            ],
                            "referencedDeclaration": 153,
                            "src": "4973:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4973:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4913:83:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 179,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5018:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "id": 180,
                              "name": "errorArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5025:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 178,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "5006:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$7_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5006:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "5006:28:0"
                      },
                      {
                        "expression": {
                          "id": 183,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 166,
                          "src": "5051:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 164,
                        "id": 184,
                        "nodeType": "Return",
                        "src": "5044:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 154,
                    "nodeType": "StructuredDocumentation",
                    "src": "4696:116:0",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
                  },
                  "id": 186,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "4826:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4842:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4834:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 155,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4834:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4856:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4848:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4848:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4867:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4859:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 159,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4859:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4833:37:0"
                  },
                  "returnParameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "4894:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4894:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4893:9:0"
                  },
                  "scope": 347,
                  "src": "4817:250:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "5382:1372:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 207,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "6278:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6270:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 205,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6270:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6270:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6283:66:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                              "typeString": "int_const 5789...(69 digits omitted)...7168"
                            },
                            "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                          },
                          "src": "6270:79:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 221,
                        "nodeType": "IfStatement",
                        "src": "6266:164:0",
                        "trueBody": {
                          "id": 220,
                          "nodeType": "Block",
                          "src": "6351:79:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 213,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6381:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 212,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6373:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 211,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6373:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 214,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6373:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 215,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7,
                                      "src": "6385:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6398:17:0",
                                    "memberName": "InvalidSignatureS",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6,
                                    "src": "6385:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$7",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  {
                                    "id": 217,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 195,
                                    "src": "6417:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "id": 218,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6372:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 204,
                              "id": 219,
                              "nodeType": "Return",
                              "src": "6365:54:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          223
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 223,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "6532:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "6524:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 222,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6524:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 230,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 225,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 189,
                              "src": "6551:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 226,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "6557:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 227,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "6560:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 228,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "6563:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 224,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "6541:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6541:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6524:41:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 231,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "6579:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6597:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6589:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 232,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6589:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6589:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6579:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 250,
                        "nodeType": "IfStatement",
                        "src": "6575:113:0",
                        "trueBody": {
                          "id": 249,
                          "nodeType": "Block",
                          "src": "6601:87:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6631:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 238,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6623:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 237,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6623:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6623:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 241,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7,
                                      "src": "6635:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 242,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6648:16:0",
                                    "memberName": "InvalidSignature",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4,
                                    "src": "6635:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$7",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 245,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6674:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6666:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 243,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6666:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6666:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "id": 247,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6622:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 204,
                              "id": 248,
                              "nodeType": "Return",
                              "src": "6615:62:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 251,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "6706:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 252,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "6714:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6727:7:0",
                              "memberName": "NoError",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3,
                              "src": "6714:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6744:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6736:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 254,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6736:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6736:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 258,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6705:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "functionReturnParameters": 204,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "6698:49:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 187,
                    "nodeType": "StructuredDocumentation",
                    "src": "5073:125:0",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "5212:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 189,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "5240:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5232:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5232:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 191,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "5260:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5254:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5254:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "5279:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5271:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5271:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "5298:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5290:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5222:83:0"
                  },
                  "returnParameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "recovered",
                        "nameLocation": "5337:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5329:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5329:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "5361:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5348:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$7",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 200,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 199,
                            "name": "RecoverError",
                            "nameLocations": [
                              "5348:12:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7,
                            "src": "5348:12:0"
                          },
                          "referencedDeclaration": 7,
                          "src": "5348:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$7",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "errArg",
                        "nameLocation": "5374:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "5366:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5366:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5328:53:0"
                  },
                  "scope": 347,
                  "src": "5203:1551:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 296,
                    "nodeType": "Block",
                    "src": "6981:166:0",
                    "statements": [
                      {
                        "assignments": [
                          276,
                          279,
                          281
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 276,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "7000:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 296,
                            "src": "6992:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 275,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6992:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 279,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "7024:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 296,
                            "src": "7011:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$7",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 278,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 277,
                                "name": "RecoverError",
                                "nameLocations": [
                                  "7011:12:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 7,
                                "src": "7011:12:0"
                              },
                              "referencedDeclaration": 7,
                              "src": "7011:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 281,
                            "mutability": "mutable",
                            "name": "errorArg",
                            "nameLocation": "7039:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 296,
                            "src": "7031:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 280,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7031:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 288,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 283,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "7062:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 284,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "7068:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 285,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "7071:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 286,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "7074:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 282,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              73,
                              153,
                              261
                            ],
                            "referencedDeclaration": 261,
                            "src": "7051:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7051:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$7_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6991:85:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 290,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "7098:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "id": 291,
                              "name": "errorArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "7105:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 289,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "7086:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$7_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7086:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "7086:28:0"
                      },
                      {
                        "expression": {
                          "id": 294,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 276,
                          "src": "7131:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 274,
                        "id": 295,
                        "nodeType": "Return",
                        "src": "7124:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "6760:122:0",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 297,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "6896:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "6912:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "6904:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6904:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "6924:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "6918:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6918:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "6935:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "6927:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6927:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "6946:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "6938:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6938:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6903:45:0"
                  },
                  "returnParameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "6972:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6972:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6971:9:0"
                  },
                  "scope": 347,
                  "src": "6887:260:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 345,
                    "nodeType": "Block",
                    "src": "7352:460:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RecoverError_$7",
                            "typeString": "enum ECDSA.RecoverError"
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 306,
                            "name": "error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "7366:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$7",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 307,
                              "name": "RecoverError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "7375:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                "typeString": "type(enum ECDSA.RecoverError)"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7388:7:0",
                            "memberName": "NoError",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3,
                            "src": "7375:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$7",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "src": "7366:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_RecoverError_$7",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 312,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "7462:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 313,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "7471:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7484:16:0",
                              "memberName": "InvalidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4,
                              "src": "7471:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "src": "7462:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_RecoverError_$7",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              "id": 323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 320,
                                "name": "error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 301,
                                "src": "7567:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$7",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 321,
                                  "name": "RecoverError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "7576:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                    "typeString": "type(enum ECDSA.RecoverError)"
                                  }
                                },
                                "id": 322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7589:22:0",
                                "memberName": "InvalidSignatureLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5,
                                "src": "7576:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$7",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "src": "7567:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_RecoverError_$7",
                                  "typeString": "enum ECDSA.RecoverError"
                                },
                                "id": 335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 332,
                                  "name": "error",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 301,
                                  "src": "7701:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$7",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 333,
                                    "name": "RecoverError",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7,
                                    "src": "7710:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RecoverError_$7_$",
                                      "typeString": "type(enum ECDSA.RecoverError)"
                                    }
                                  },
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7723:17:0",
                                  "memberName": "InvalidSignatureS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6,
                                  "src": "7710:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$7",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "src": "7701:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 341,
                              "nodeType": "IfStatement",
                              "src": "7697:109:0",
                              "trueBody": {
                                "id": 340,
                                "nodeType": "Block",
                                "src": "7742:64:0",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 337,
                                          "name": "errorArg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 303,
                                          "src": "7786:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 336,
                                        "name": "ECDSAInvalidSignatureS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20,
                                        "src": "7763:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
                                          "typeString": "function (bytes32) pure returns (error)"
                                        }
                                      },
                                      "id": 338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7763:32:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 339,
                                    "nodeType": "RevertStatement",
                                    "src": "7756:39:0"
                                  }
                                ]
                              }
                            },
                            "id": 342,
                            "nodeType": "IfStatement",
                            "src": "7563:243:0",
                            "trueBody": {
                              "id": 331,
                              "nodeType": "Block",
                              "src": "7613:78:0",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 327,
                                            "name": "errorArg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 303,
                                            "src": "7670:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 326,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7662:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 325,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7662:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 328,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7662:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 324,
                                      "name": "ECDSAInvalidSignatureLength",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15,
                                      "src": "7634:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
                                        "typeString": "function (uint256) pure returns (error)"
                                      }
                                    },
                                    "id": 329,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7634:46:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 330,
                                  "nodeType": "RevertStatement",
                                  "src": "7627:53:0"
                                }
                              ]
                            }
                          },
                          "id": 343,
                          "nodeType": "IfStatement",
                          "src": "7458:348:0",
                          "trueBody": {
                            "id": 319,
                            "nodeType": "Block",
                            "src": "7502:55:0",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 316,
                                    "name": "ECDSAInvalidSignature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10,
                                    "src": "7523:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                      "typeString": "function () pure returns (error)"
                                    }
                                  },
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7523:23:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_error",
                                    "typeString": "error"
                                  }
                                },
                                "id": 318,
                                "nodeType": "RevertStatement",
                                "src": "7516:30:0"
                              }
                            ]
                          }
                        },
                        "id": 344,
                        "nodeType": "IfStatement",
                        "src": "7362:444:0",
                        "trueBody": {
                          "id": 311,
                          "nodeType": "Block",
                          "src": "7397:55:0",
                          "statements": [
                            {
                              "functionReturnParameters": 305,
                              "id": 310,
                              "nodeType": "Return",
                              "src": "7411:7:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 298,
                    "nodeType": "StructuredDocumentation",
                    "src": "7153:122:0",
                    "text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
                  },
                  "id": 346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_throwError",
                  "nameLocation": "7289:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "error",
                        "nameLocation": "7314:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "7301:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$7",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 300,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 299,
                            "name": "RecoverError",
                            "nameLocations": [
                              "7301:12:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7,
                            "src": "7301:12:0"
                          },
                          "referencedDeclaration": 7,
                          "src": "7301:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$7",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "errorArg",
                        "nameLocation": "7329:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "7321:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7321:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7300:38:0"
                  },
                  "returnParameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7352:0:0"
                  },
                  "scope": 347,
                  "src": "7280:532:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 348,
              "src": "344:7470:0",
              "usedErrors": [
                10,
                15,
                20
              ],
              "usedEvents": []
            }
          ],
          "src": "112:7703:0"
        },
        "id": 0
      },
      "contract/AdminCertificateHelper.sol": {
        "ast": {
          "absolutePath": "contract/AdminCertificateHelper.sol",
          "exportedSymbols": {
            "AdminCertificateHelper": [
              652
            ],
            "ChunkedX509Cert": [
              800
            ],
            "ECDSA": [
              347
            ],
            "IAdminCertificateHelper": [
              763
            ],
            "ICertVerifier": [
              778
            ],
            "Owned": [
              753
            ]
          },
          "id": 653,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 349,
              "literals": [
                "solidity",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "absolutePath": "contract/Owned.sol",
              "file": "./Owned.sol",
              "id": 350,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 653,
              "sourceUnit": 754,
              "src": "57:21:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contract/interfaces/ICertVerifier.sol",
              "file": "./interfaces/ICertVerifier.sol",
              "id": 351,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 653,
              "sourceUnit": 779,
              "src": "79:40:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contract/interfaces/IAdminCertificateHelper.sol",
              "file": "./interfaces/IAdminCertificateHelper.sol",
              "id": 352,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 653,
              "sourceUnit": 764,
              "src": "120:50:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "id": 353,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 653,
              "sourceUnit": 348,
              "src": "171:62:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 354,
                    "name": "IAdminCertificateHelper",
                    "nameLocations": [
                      "270:23:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 763,
                    "src": "270:23:1"
                  },
                  "id": 355,
                  "nodeType": "InheritanceSpecifier",
                  "src": "270:23:1"
                },
                {
                  "baseName": {
                    "id": 356,
                    "name": "Owned",
                    "nameLocations": [
                      "295:5:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 753,
                    "src": "295:5:1"
                  },
                  "id": 357,
                  "nodeType": "InheritanceSpecifier",
                  "src": "295:5:1"
                }
              ],
              "canonicalName": "AdminCertificateHelper",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 652,
              "linearizedBaseContracts": [
                652,
                753,
                763
              ],
              "name": "AdminCertificateHelper",
              "nameLocation": "244:22:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 360,
                  "mutability": "mutable",
                  "name": "certVerifier",
                  "nameLocation": "329:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "306:35:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICertVerifier_$778",
                    "typeString": "contract ICertVerifier"
                  },
                  "typeName": {
                    "id": 359,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 358,
                      "name": "ICertVerifier",
                      "nameLocations": [
                        "306:13:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 778,
                      "src": "306:13:1"
                    },
                    "referencedDeclaration": 778,
                    "src": "306:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICertVerifier_$778",
                      "typeString": "contract ICertVerifier"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 362,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "363:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "346:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "certsChain",
                  "nameLocation": "399:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "372:37:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage",
                    "typeString": "struct ChunkedX509Cert[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 364,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 363,
                        "name": "ChunkedX509Cert",
                        "nameLocations": [
                          "372:15:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 800,
                        "src": "372:15:1"
                      },
                      "referencedDeclaration": 800,
                      "src": "372:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_storage_ptr",
                        "typeString": "struct ChunkedX509Cert"
                      }
                    },
                    "id": 365,
                    "nodeType": "ArrayTypeName",
                    "src": "372:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage_ptr",
                      "typeString": "struct ChunkedX509Cert[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "rootCertId",
                  "nameLocation": "430:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "413:27:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "signatureNonce",
                  "nameLocation": "461:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "444:31:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "authorizedSolutionHash",
                  "nameLocation": "496:22:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 652,
                  "src": "479:39:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c8b1d729ea7c9a12c8ebcaf5bbb64f5a001f331261d068920947589040a2d954",
                  "id": 380,
                  "name": "CertVerifierSet",
                  "nameLocation": "529:15:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldCertVerifier",
                        "nameLocation": "567:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "545:37:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICertVerifier_$778",
                          "typeString": "contract ICertVerifier"
                        },
                        "typeName": {
                          "id": 374,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 373,
                            "name": "ICertVerifier",
                            "nameLocations": [
                              "545:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 778,
                            "src": "545:13:1"
                          },
                          "referencedDeclaration": 778,
                          "src": "545:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 378,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newCertVerifier",
                        "nameLocation": "606:15:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 380,
                        "src": "584:37:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICertVerifier_$778",
                          "typeString": "contract ICertVerifier"
                        },
                        "typeName": {
                          "id": 377,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 376,
                            "name": "ICertVerifier",
                            "nameLocations": [
                              "584:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 778,
                            "src": "584:13:1"
                          },
                          "referencedDeclaration": 778,
                          "src": "584:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "544:78:1"
                  },
                  "src": "523:100:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "2ff02e3194f5700f91a1e89169623293cdf4b5529c368e4810b3b8593203c8cc",
                  "id": 392,
                  "name": "SetAdmin",
                  "nameLocation": "632:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldAdmin",
                        "nameLocation": "657:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "641:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "683:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "667:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "certsChain",
                        "nameLocation": "711:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "693:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ChunkedX509Cert[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 386,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 385,
                              "name": "ChunkedX509Cert",
                              "nameLocations": [
                                "693:15:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 800,
                              "src": "693:15:1"
                            },
                            "referencedDeclaration": 800,
                            "src": "693:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_storage_ptr",
                              "typeString": "struct ChunkedX509Cert"
                            }
                          },
                          "id": 387,
                          "nodeType": "ArrayTypeName",
                          "src": "693:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage_ptr",
                            "typeString": "struct ChunkedX509Cert[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rootCertId",
                        "nameLocation": "731:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "723:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "723:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "640:102:1"
                  },
                  "src": "626:117:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b134f848761a2f3e71de218780593a57ad2bd1ab2139bede1c142ca96c822599",
                  "id": 398,
                  "name": "SetAuthorizedSolutionHash",
                  "nameLocation": "752:25:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "oldAuthorizedSolutionHash",
                        "nameLocation": "794:25:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "778:41:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 396,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAuthorizedSolutionHash",
                        "nameLocation": "837:25:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "821:41:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "777:86:1"
                  },
                  "src": "746:118:1"
                },
                {
                  "body": {
                    "id": 414,
                    "nodeType": "Block",
                    "src": "940:99:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 407,
                              "name": "_certVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "963:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            ],
                            "id": 406,
                            "name": "_setCertVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 629,
                            "src": "946:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ICertVerifier_$778_$returns$__$",
                              "typeString": "function (contract ICertVerifier)"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "946:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "946:31:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 411,
                              "name": "_authorizedSolutionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "1010:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 410,
                            "name": "_setAuthorizedSolutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "983:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "983:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 413,
                        "nodeType": "ExpressionStatement",
                        "src": "983:51:1"
                      }
                    ]
                  },
                  "id": 415,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "_certVerifier",
                        "nameLocation": "894:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 415,
                        "src": "880:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICertVerifier_$778",
                          "typeString": "contract ICertVerifier"
                        },
                        "typeName": {
                          "id": 400,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 399,
                            "name": "ICertVerifier",
                            "nameLocations": [
                              "880:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 778,
                            "src": "880:13:1"
                          },
                          "referencedDeclaration": 778,
                          "src": "880:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "_authorizedSolutionHash",
                        "nameLocation": "916:23:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 415,
                        "src": "908:31:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "879:61:1"
                  },
                  "returnParameters": {
                    "id": 405,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "940:0:1"
                  },
                  "scope": 652,
                  "src": "868:171:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 427,
                    "nodeType": "Block",
                    "src": "1118:42:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 424,
                              "name": "_certVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "1141:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            ],
                            "id": 423,
                            "name": "_setCertVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 629,
                            "src": "1124:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ICertVerifier_$778_$returns$__$",
                              "typeString": "function (contract ICertVerifier)"
                            }
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 426,
                        "nodeType": "ExpressionStatement",
                        "src": "1124:31:1"
                      }
                    ]
                  },
                  "functionSelector": "3f96591f",
                  "id": 428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 421,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 420,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1106:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 752,
                        "src": "1106:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1106:11:1"
                    }
                  ],
                  "name": "setCertVerifier",
                  "nameLocation": "1052:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 418,
                        "mutability": "mutable",
                        "name": "_certVerifier",
                        "nameLocation": "1082:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "1068:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICertVerifier_$778",
                          "typeString": "contract ICertVerifier"
                        },
                        "typeName": {
                          "id": 417,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 416,
                            "name": "ICertVerifier",
                            "nameLocations": [
                              "1068:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 778,
                            "src": "1068:13:1"
                          },
                          "referencedDeclaration": 778,
                          "src": "1068:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1067:29:1"
                  },
                  "returnParameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1118:0:1"
                  },
                  "scope": 652,
                  "src": "1043:117:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "1255:62:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 436,
                              "name": "_authorizedSolutionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "1288:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 435,
                            "name": "_setAuthorizedSolutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "1261:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1261:51:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "1261:51:1"
                      }
                    ]
                  },
                  "functionSelector": "10b0258c",
                  "id": 440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 433,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 432,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1243:9:1"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 752,
                        "src": "1243:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1243:11:1"
                    }
                  ],
                  "name": "setAuthorizedSolutionHash",
                  "nameLocation": "1175:25:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 430,
                        "mutability": "mutable",
                        "name": "_authorizedSolutionHash",
                        "nameLocation": "1209:23:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1201:31:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1200:33:1"
                  },
                  "returnParameters": {
                    "id": 434,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1255:0:1"
                  },
                  "scope": 652,
                  "src": "1166:151:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 544,
                    "nodeType": "Block",
                    "src": "1434:638:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 454,
                              "name": "_certsChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "1469:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ChunkedX509Cert calldata[] calldata"
                              }
                            },
                            {
                              "id": 455,
                              "name": "_rootCertId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1482:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ChunkedX509Cert calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 451,
                              "name": "certVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "1440:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1453:15:1",
                            "memberName": "verifyCertChain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 777,
                            "src": "1440:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_array$_t_struct$_ChunkedX509Cert_$800_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (struct ChunkedX509Cert memory[] memory,uint256) view external returns (bytes32)"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1440:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 457,
                        "nodeType": "ExpressionStatement",
                        "src": "1440:54:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 459,
                                    "name": "_certsChain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 444,
                                    "src": "1508:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct ChunkedX509Cert calldata[] calldata"
                                    }
                                  },
                                  "id": 461,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 460,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1520:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1508:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_calldata_ptr",
                                    "typeString": "struct ChunkedX509Cert calldata"
                                  }
                                },
                                "id": 462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1523:8:1",
                                "memberName": "userData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 789,
                                "src": "1508:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 463,
                                "name": "authorizedSolutionHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 372,
                                "src": "1533:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1508:47:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920617574686f72697a656420736f6c7574696f6e",
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1556:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_633e050afe7d36be6806c293400966a53b7d95fc6b134d2f8f38ce342f914a92",
                                "typeString": "literal_string \"Only authorized solution\""
                              },
                              "value": "Only authorized solution"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_633e050afe7d36be6806c293400966a53b7d95fc6b134d2f8f38ce342f914a92",
                                "typeString": "literal_string \"Only authorized solution\""
                              }
                            ],
                            "id": 458,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1500:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1500:83:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "1500:83:1"
                      },
                      {
                        "assignments": [
                          469
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 469,
                            "mutability": "mutable",
                            "name": "newAdmin",
                            "nameLocation": "1598:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 544,
                            "src": "1590:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 468,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1590:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 472,
                        "initialValue": {
                          "expression": {
                            "id": 470,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1607:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1611:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1607:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1590:27:1"
                      },
                      {
                        "assignments": [
                          474
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 474,
                            "mutability": "mutable",
                            "name": "dataHash",
                            "nameLocation": "1631:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 544,
                            "src": "1623:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 473,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1623:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 488,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 478,
                                  "name": "newAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 469,
                                  "src": "1658:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 479,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1667:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 480,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1673:7:1",
                                  "memberName": "chainid",
                                  "nodeType": "MemberAccess",
                                  "src": "1667:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 483,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1689:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AdminCertificateHelper_$652",
                                        "typeString": "contract AdminCertificateHelper"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AdminCertificateHelper_$652",
                                        "typeString": "contract AdminCertificateHelper"
                                      }
                                    ],
                                    "id": 482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1681:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 481,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1681:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1681:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 485,
                                  "name": "signatureNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "1695:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 476,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1647:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1651:6:1",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1647:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1647:63:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 475,
                            "name": "sha256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -22,
                            "src": "1640:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1640:71:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1623:88:1"
                      },
                      {
                        "assignments": [
                          490
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 490,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "1725:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 544,
                            "src": "1717:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 489,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1717:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 496,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 493,
                              "name": "dataHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "1746:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 494,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 448,
                              "src": "1756:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "id": 491,
                              "name": "ECDSA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1732:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ECDSA_$347_$",
                                "typeString": "type(library ECDSA)"
                              }
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1738:7:1",
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 103,
                            "src": "1732:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1717:49:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 498,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "1780:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 506,
                                                    "name": "_certsChain",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 444,
                                                    "src": "1822:11:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                                                      "typeString": "struct ChunkedX509Cert calldata[] calldata"
                                                    }
                                                  },
                                                  "id": 508,
                                                  "indexExpression": {
                                                    "hexValue": "30",
                                                    "id": 507,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1834:1:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "1822:14:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_calldata_ptr",
                                                    "typeString": "struct ChunkedX509Cert calldata"
                                                  }
                                                },
                                                "id": 509,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1837:9:1",
                                                "memberName": "publicKey",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 791,
                                                "src": "1822:24:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                                  "typeString": "bytes calldata"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                                  "typeString": "bytes calldata"
                                                }
                                              ],
                                              "id": 505,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "1812:9:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 510,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1812:35:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 504,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1804:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 503,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1804:7:1",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 511,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1804:44:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 502,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1796:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint160_$",
                                        "typeString": "type(uint160)"
                                      },
                                      "typeName": {
                                        "id": 501,
                                        "name": "uint160",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1796:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 512,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1796:53:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint160",
                                      "typeString": "uint160"
                                    }
                                  ],
                                  "id": 500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1788:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 499,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1788:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1788:62:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1780:70:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642064617461207369676e6174757265",
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1851:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0e6ecf07298cc87c8125e1f5d41d74508369b8e3fc60d9a08f5af37c72df0ca2",
                                "typeString": "literal_string \"Invalid data signature\""
                              },
                              "value": "Invalid data signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0e6ecf07298cc87c8125e1f5d41d74508369b8e3fc60d9a08f5af37c72df0ca2",
                                "typeString": "literal_string \"Invalid data signature\""
                              }
                            ],
                            "id": 497,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1772:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:104:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 517,
                        "nodeType": "ExpressionStatement",
                        "src": "1772:104:1"
                      },
                      {
                        "expression": {
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1882:16:1",
                          "subExpression": {
                            "id": 518,
                            "name": "signatureNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "1882:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 520,
                        "nodeType": "ExpressionStatement",
                        "src": "1882:16:1"
                      },
                      {
                        "assignments": [
                          522
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 522,
                            "mutability": "mutable",
                            "name": "oldAdmin",
                            "nameLocation": "1913:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 544,
                            "src": "1905:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 521,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1905:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 524,
                        "initialValue": {
                          "id": 523,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 362,
                          "src": "1922:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1905:22:1"
                      },
                      {
                        "expression": {
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 525,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "1933:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 526,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "1939:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1933:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 528,
                        "nodeType": "ExpressionStatement",
                        "src": "1933:14:1"
                      },
                      {
                        "expression": {
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 529,
                            "name": "certsChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "1953:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage",
                              "typeString": "struct ChunkedX509Cert storage ref[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 530,
                            "name": "_certsChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 444,
                            "src": "1964:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct ChunkedX509Cert calldata[] calldata"
                            }
                          },
                          "src": "1953:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage",
                            "typeString": "struct ChunkedX509Cert storage ref[] storage ref"
                          }
                        },
                        "id": 532,
                        "nodeType": "ExpressionStatement",
                        "src": "1953:22:1"
                      },
                      {
                        "expression": {
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 533,
                            "name": "rootCertId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "1981:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 534,
                            "name": "_rootCertId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "1992:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1981:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "1981:22:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 538,
                              "name": "oldAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "2023:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 539,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "2032:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 540,
                              "name": "_certsChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 444,
                              "src": "2042:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ChunkedX509Cert calldata[] calldata"
                              }
                            },
                            {
                              "id": 541,
                              "name": "_rootCertId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "2055:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct ChunkedX509Cert calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 537,
                            "name": "SetAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 392,
                            "src": "2014:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_struct$_ChunkedX509Cert_$800_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,struct ChunkedX509Cert memory[] memory,uint256)"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2014:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 543,
                        "nodeType": "EmitStatement",
                        "src": "2009:58:1"
                      }
                    ]
                  },
                  "functionSelector": "6dd5be81",
                  "id": 545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addAdmin",
                  "nameLocation": "1330:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 444,
                        "mutability": "mutable",
                        "name": "_certsChain",
                        "nameLocation": "1366:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "1339:38:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ChunkedX509Cert[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 442,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 441,
                              "name": "ChunkedX509Cert",
                              "nameLocations": [
                                "1339:15:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 800,
                              "src": "1339:15:1"
                            },
                            "referencedDeclaration": 800,
                            "src": "1339:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_storage_ptr",
                              "typeString": "struct ChunkedX509Cert"
                            }
                          },
                          "id": 443,
                          "nodeType": "ArrayTypeName",
                          "src": "1339:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage_ptr",
                            "typeString": "struct ChunkedX509Cert[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "_rootCertId",
                        "nameLocation": "1387:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "1379:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 445,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1379:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "1414:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "1399:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1399:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1338:86:1"
                  },
                  "returnParameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1434:0:1"
                  },
                  "scope": 652,
                  "src": "1321:751:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    762
                  ],
                  "body": {
                    "id": 557,
                    "nodeType": "Block",
                    "src": "2145:31:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 553,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "2158:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 554,
                            "name": "caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 547,
                            "src": "2165:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2158:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 552,
                        "id": 556,
                        "nodeType": "Return",
                        "src": "2151:20:1"
                      }
                    ]
                  },
                  "functionSelector": "24d7806c",
                  "id": 558,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAdmin",
                  "nameLocation": "2085:7:1",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 549,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2123:8:1"
                  },
                  "parameters": {
                    "id": 548,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "2101:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "2093:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2093:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2092:16:1"
                  },
                  "returnParameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "2140:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2140:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:6:1"
                  },
                  "scope": 652,
                  "src": "2076:100:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "2299:47:1",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 569,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "2313:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 570,
                              "name": "certsChain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "2319:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage",
                                "typeString": "struct ChunkedX509Cert storage ref[] storage ref"
                              }
                            },
                            {
                              "id": 571,
                              "name": "rootCertId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "2330:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 572,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2312:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage_$_t_uint256_$",
                            "typeString": "tuple(address,struct ChunkedX509Cert storage ref[] storage ref,uint256)"
                          }
                        },
                        "functionReturnParameters": 568,
                        "id": 573,
                        "nodeType": "Return",
                        "src": "2305:36:1"
                      }
                    ]
                  },
                  "functionSelector": "8f7a844b",
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdminData",
                  "nameLocation": "2189:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2201:2:1"
                  },
                  "returnParameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 561,
                        "mutability": "mutable",
                        "name": "_admin",
                        "nameLocation": "2234:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "2226:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2226:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "_certsChain",
                        "nameLocation": "2266:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "2241:36:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ChunkedX509Cert[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 563,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 562,
                              "name": "ChunkedX509Cert",
                              "nameLocations": [
                                "2241:15:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 800,
                              "src": "2241:15:1"
                            },
                            "referencedDeclaration": 800,
                            "src": "2241:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_storage_ptr",
                              "typeString": "struct ChunkedX509Cert"
                            }
                          },
                          "id": 564,
                          "nodeType": "ArrayTypeName",
                          "src": "2241:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage_ptr",
                            "typeString": "struct ChunkedX509Cert[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "mutability": "mutable",
                        "name": "_rootCertId",
                        "nameLocation": "2287:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "2279:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2279:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2225:74:1"
                  },
                  "scope": 652,
                  "src": "2180:166:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 583,
                    "nodeType": "Block",
                    "src": "2413:30:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 581,
                          "name": "certVerifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "2426:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "functionReturnParameters": 580,
                        "id": 582,
                        "nodeType": "Return",
                        "src": "2419:19:1"
                      }
                    ]
                  },
                  "functionSelector": "40c7d18f",
                  "id": 584,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCertVerifier",
                  "nameLocation": "2359:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2374:2:1"
                  },
                  "returnParameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "2399:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICertVerifier_$778",
                          "typeString": "contract ICertVerifier"
                        },
                        "typeName": {
                          "id": 578,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 577,
                            "name": "ICertVerifier",
                            "nameLocations": [
                              "2399:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 778,
                            "src": "2399:13:1"
                          },
                          "referencedDeclaration": 778,
                          "src": "2399:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:15:1"
                  },
                  "scope": 652,
                  "src": "2350:93:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 591,
                    "nodeType": "Block",
                    "src": "2514:40:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 589,
                          "name": "authorizedSolutionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 372,
                          "src": "2527:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 588,
                        "id": 590,
                        "nodeType": "Return",
                        "src": "2520:29:1"
                      }
                    ]
                  },
                  "functionSelector": "c3713cad",
                  "id": 592,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAuthorizedSolutionHash",
                  "nameLocation": "2456:25:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2481:2:1"
                  },
                  "returnParameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "2506:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2506:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2505:9:1"
                  },
                  "scope": 652,
                  "src": "2447:107:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 599,
                    "nodeType": "Block",
                    "src": "2617:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 597,
                          "name": "signatureNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "2630:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 596,
                        "id": 598,
                        "nodeType": "Return",
                        "src": "2623:21:1"
                      }
                    ]
                  },
                  "functionSelector": "8de1ecb2",
                  "id": 600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSignatureNonce",
                  "nameLocation": "2567:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2584:2:1"
                  },
                  "returnParameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 600,
                        "src": "2609:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2609:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2608:9:1"
                  },
                  "scope": 652,
                  "src": "2558:91:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 628,
                    "nodeType": "Block",
                    "src": "2717:183:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 609,
                                    "name": "_certVerifier",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 603,
                                    "src": "2739:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                      "typeString": "contract ICertVerifier"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                      "typeString": "contract ICertVerifier"
                                    }
                                  ],
                                  "id": 608,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2731:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 607,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2731:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2731:22:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 613,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2765:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2757:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 611,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2757:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2757:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2731:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6365727456657269666965722063616e6e6f74206265207a65726f2061646472657373",
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2768:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_69cd75255a75643b7090f24a0a2535f0a7970886bf7c8a7bcefa4498f859baa8",
                                "typeString": "literal_string \"certVerifier cannot be zero address\""
                              },
                              "value": "certVerifier cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_69cd75255a75643b7090f24a0a2535f0a7970886bf7c8a7bcefa4498f859baa8",
                                "typeString": "literal_string \"certVerifier cannot be zero address\""
                              }
                            ],
                            "id": 606,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2723:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:83:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 618,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:83:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 620,
                              "name": "certVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "2833:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            },
                            {
                              "id": 621,
                              "name": "_certVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "2847:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              },
                              {
                                "typeIdentifier": "t_contract$_ICertVerifier_$778",
                                "typeString": "contract ICertVerifier"
                              }
                            ],
                            "id": 619,
                            "name": "CertVerifierSet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "2817:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ICertVerifier_$778_$_t_contract$_ICertVerifier_$778_$returns$__$",
                              "typeString": "function (contract ICertVerifier,contract ICertVerifier)"
                            }
                          },
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2817:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 623,
                        "nodeType": "EmitStatement",
                        "src": "2812:49:1"
                      },
                      {
                        "expression": {
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 624,
                            "name": "certVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "2867:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICertVerifier_$778",
                              "typeString": "contract ICertVerifier"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 625,
                            "name": "_certVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 603,
                            "src": "2882:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICertVerifier_$778",
                              "typeString": "contract ICertVerifier"
                            }
                          },
                          "src": "2867:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "id": 627,
                        "nodeType": "ExpressionStatement",
                        "src": "2867:28:1"
                      }
                    ]
                  },
                  "id": 629,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setCertVerifier",
                  "nameLocation": "2662:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "_certVerifier",
                        "nameLocation": "2693:13:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "2679:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICertVerifier_$778",
                          "typeString": "contract ICertVerifier"
                        },
                        "typeName": {
                          "id": 602,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 601,
                            "name": "ICertVerifier",
                            "nameLocations": [
                              "2679:13:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 778,
                            "src": "2679:13:1"
                          },
                          "referencedDeclaration": 778,
                          "src": "2679:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICertVerifier_$778",
                            "typeString": "contract ICertVerifier"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2678:29:1"
                  },
                  "returnParameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2717:0:1"
                  },
                  "scope": 652,
                  "src": "2653:247:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 650,
                    "nodeType": "Block",
                    "src": "2982:227:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 635,
                                "name": "_authorizedSolutionHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "2996:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3023:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2996:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417574686f72697a6564536f6c7574696f6e486173682063616e6e6f74206265207a65726f",
                              "id": 638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3025:39:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b56ca5e7cce8314ed924d42418f834e8a3329ab3f11fdce0a2667e79062e2e48",
                                "typeString": "literal_string \"AuthorizedSolutionHash cannot be zero\""
                              },
                              "value": "AuthorizedSolutionHash cannot be zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b56ca5e7cce8314ed924d42418f834e8a3329ab3f11fdce0a2667e79062e2e48",
                                "typeString": "literal_string \"AuthorizedSolutionHash cannot be zero\""
                              }
                            ],
                            "id": 634,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2988:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2988:77:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 640,
                        "nodeType": "ExpressionStatement",
                        "src": "2988:77:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 642,
                              "name": "authorizedSolutionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "3102:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 643,
                              "name": "_authorizedSolutionHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "3126:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 641,
                            "name": "SetAuthorizedSolutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "3076:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32)"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3076:74:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 645,
                        "nodeType": "EmitStatement",
                        "src": "3071:79:1"
                      },
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 646,
                            "name": "authorizedSolutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "3156:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 647,
                            "name": "_authorizedSolutionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "3181:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "3156:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:48:1"
                      }
                    ]
                  },
                  "id": 651,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setAuthorizedSolutionHash",
                  "nameLocation": "2913:26:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "_authorizedSolutionHash",
                        "nameLocation": "2948:23:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "2940:31:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:33:1"
                  },
                  "returnParameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2982:0:1"
                  },
                  "scope": 652,
                  "src": "2904:305:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 653,
              "src": "235:2977:1",
              "usedErrors": [
                10,
                15,
                20
              ],
              "usedEvents": [
                380,
                392,
                398,
                665,
                671
              ]
            }
          ],
          "src": "32:3181:1"
        },
        "id": 1
      },
      "contract/Owned.sol": {
        "ast": {
          "absolutePath": "contract/Owned.sol",
          "exportedSymbols": {
            "Owned": [
              753
            ]
          },
          "id": 754,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 654,
              "literals": [
                "solidity",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Owned",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 655,
                "nodeType": "StructuredDocumentation",
                "src": "57:101:2",
                "text": " @title The Owned contract\n @notice A contract with helpers for basic contract ownership."
              },
              "fullyImplemented": true,
              "id": 753,
              "linearizedBaseContracts": [
                753
              ],
              "name": "Owned",
              "nameLocation": "168:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 657,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "202:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "179:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "179:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "pendingOwner",
                  "nameLocation": "227:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "211:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
                  "id": 665,
                  "name": "OwnershipTransferRequested",
                  "nameLocation": "250:26:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "298:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "282:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "282:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "324:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "308:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "308:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "276:54:2"
                  },
                  "src": "244:87:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 671,
                  "name": "OwnershipTransferred",
                  "nameLocation": "340:20:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 667,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "382:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "366:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "366:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "408:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "392:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "392:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "360:54:2"
                  },
                  "src": "334:81:2"
                },
                {
                  "body": {
                    "id": 682,
                    "nodeType": "Block",
                    "src": "433:38:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 674,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "439:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 677,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "455:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "459:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "455:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "447:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 675,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "447:8:2",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "447:19:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "439:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "439:27:2"
                      }
                    ]
                  },
                  "id": 683,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "430:2:2"
                  },
                  "returnParameters": {
                    "id": 673,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "433:0:2"
                  },
                  "scope": 753,
                  "src": "419:52:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "648:79:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 691,
                            "name": "pendingOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "654:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 692,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "669:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "654:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 694,
                        "nodeType": "ExpressionStatement",
                        "src": "654:18:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 696,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 657,
                              "src": "711:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 697,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "718:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 695,
                            "name": "OwnershipTransferRequested",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "684:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "684:38:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 699,
                        "nodeType": "EmitStatement",
                        "src": "679:43:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 684,
                    "nodeType": "StructuredDocumentation",
                    "src": "475:99:2",
                    "text": " @dev Allows an owner to begin transferring ownership to a new address,\n pending."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 701,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 689,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 688,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "634:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 752,
                        "src": "634:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "634:11:2"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "586:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "612:3:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "604:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "604:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "603:13:2"
                  },
                  "returnParameters": {
                    "id": 690,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:0:2"
                  },
                  "scope": 753,
                  "src": "577:150:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 738,
                    "nodeType": "Block",
                    "src": "858:221:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 706,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "872:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "876:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "872:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 708,
                                "name": "pendingOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 659,
                                "src": "886:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "872:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742062652070726f706f736564206f776e6572",
                              "id": 710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "900:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                                "typeString": "literal_string \"Must be proposed owner\""
                              },
                              "value": "Must be proposed owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                                "typeString": "literal_string \"Must be proposed owner\""
                              }
                            ],
                            "id": 705,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "864:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "864:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 712,
                        "nodeType": "ExpressionStatement",
                        "src": "864:61:2"
                      },
                      {
                        "assignments": [
                          714
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 714,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "940:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 738,
                            "src": "932:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 713,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "932:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 716,
                        "initialValue": {
                          "id": 715,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 657,
                          "src": "951:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "932:24:2"
                      },
                      {
                        "expression": {
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 717,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "962:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 720,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "978:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "982:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "978:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "970:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "970:8:2",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "970:19:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "962:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "962:27:2"
                      },
                      {
                        "expression": {
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 725,
                            "name": "pendingOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 659,
                            "src": "995:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1018:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1010:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 726,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1010:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1010:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "995:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 731,
                        "nodeType": "ExpressionStatement",
                        "src": "995:25:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 733,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "1053:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 734,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1063:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1067:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1063:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 732,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "1032:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1032:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 737,
                        "nodeType": "EmitStatement",
                        "src": "1027:47:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 702,
                    "nodeType": "StructuredDocumentation",
                    "src": "731:82:2",
                    "text": " @dev Allows an ownership transfer to be completed by the recipient."
                  },
                  "functionSelector": "79ba5097",
                  "id": 739,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptOwnership",
                  "nameLocation": "825:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "840:2:2"
                  },
                  "returnParameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "858:0:2"
                  },
                  "scope": 753,
                  "src": "816:263:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "1185:72:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 743,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1199:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1203:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1199:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 745,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 657,
                                "src": "1213:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1199:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                              "id": 747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1220:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                "typeString": "literal_string \"Only callable by owner\""
                              },
                              "value": "Only callable by owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                                "typeString": "literal_string \"Only callable by owner\""
                              }
                            ],
                            "id": 742,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1191:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1191:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 749,
                        "nodeType": "ExpressionStatement",
                        "src": "1191:54:2"
                      },
                      {
                        "id": 750,
                        "nodeType": "PlaceholderStatement",
                        "src": "1251:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 740,
                    "nodeType": "StructuredDocumentation",
                    "src": "1083:78:2",
                    "text": " @dev Reverts if called by anyone other than the contract owner."
                  },
                  "id": 752,
                  "name": "onlyOwner",
                  "nameLocation": "1173:9:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1182:2:2"
                  },
                  "src": "1164:93:2",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 754,
              "src": "159:1101:2",
              "usedErrors": [],
              "usedEvents": [
                665,
                671
              ]
            }
          ],
          "src": "32:1229:2"
        },
        "id": 2
      },
      "contract/interfaces/IAdminCertificateHelper.sol": {
        "ast": {
          "absolutePath": "contract/interfaces/IAdminCertificateHelper.sol",
          "exportedSymbols": {
            "IAdminCertificateHelper": [
              763
            ]
          },
          "id": 764,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 755,
              "literals": [
                "solidity",
                "0.8",
                ".30"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAdminCertificateHelper",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 763,
              "linearizedBaseContracts": [
                763
              ],
              "name": "IAdminCertificateHelper",
              "nameLocation": "67:23:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "24d7806c",
                  "id": 762,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isAdmin",
                  "nameLocation": "106:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "caller",
                        "nameLocation": "122:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "114:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "114:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:16:3"
                  },
                  "returnParameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 762,
                        "src": "152:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 759,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:6:3"
                  },
                  "scope": 763,
                  "src": "97:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 764,
              "src": "57:103:3",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:129:3"
        },
        "id": 3
      },
      "contract/interfaces/ICertVerifier.sol": {
        "ast": {
          "absolutePath": "contract/interfaces/ICertVerifier.sol",
          "exportedSymbols": {
            "ChunkedX509Cert": [
              800
            ],
            "ICertVerifier": [
              778
            ]
          },
          "id": 779,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 765,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:4"
            },
            {
              "absolutePath": "contract/types/ChunkedX509Cert.sol",
              "file": "../types/ChunkedX509Cert.sol",
              "id": 766,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 779,
              "sourceUnit": 801,
              "src": "57:38:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ICertVerifier",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 778,
              "linearizedBaseContracts": [
                778
              ],
              "name": "ICertVerifier",
              "nameLocation": "107:13:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "4ff6338c",
                  "id": 777,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCertChain",
                  "nameLocation": "136:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 773,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "certsChain",
                        "nameLocation": "179:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 777,
                        "src": "152:37:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct ChunkedX509Cert[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 768,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 767,
                              "name": "ChunkedX509Cert",
                              "nameLocations": [
                                "152:15:4"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 800,
                              "src": "152:15:4"
                            },
                            "referencedDeclaration": 800,
                            "src": "152:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ChunkedX509Cert_$800_storage_ptr",
                              "typeString": "struct ChunkedX509Cert"
                            }
                          },
                          "id": 769,
                          "nodeType": "ArrayTypeName",
                          "src": "152:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ChunkedX509Cert_$800_storage_$dyn_storage_ptr",
                            "typeString": "struct ChunkedX509Cert[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 772,
                        "mutability": "mutable",
                        "name": "rootCertId",
                        "nameLocation": "199:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 777,
                        "src": "191:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 771,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "191:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:59:4"
                  },
                  "returnParameters": {
                    "id": 776,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 775,
                        "mutability": "mutable",
                        "name": "leafCertHash",
                        "nameLocation": "242:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 777,
                        "src": "234:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "233:22:4"
                  },
                  "scope": 778,
                  "src": "127:129:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 779,
              "src": "97:161:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:227:4"
        },
        "id": 4
      },
      "contract/types/ChunkedX509Cert.sol": {
        "ast": {
          "absolutePath": "contract/types/ChunkedX509Cert.sol",
          "exportedSymbols": {
            "ChunkedX509Cert": [
              800
            ]
          },
          "id": 801,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 780,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:5"
            },
            {
              "canonicalName": "ChunkedX509Cert",
              "id": 800,
              "members": [
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "nonSerializedParts",
                  "nameLocation": "94:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "86:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 781,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "86:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 782,
                    "nodeType": "ArrayTypeName",
                    "src": "86:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "nameLocation": "124:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "118:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "ca",
                  "nameLocation": "150:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "144:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "144:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "191:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "183:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "publicKey",
                  "nameLocation": "211:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "205:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "232:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "226:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "226:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "mrEnclave",
                  "nameLocation": "258:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "250:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "mrSigner",
                  "nameLocation": "281:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "273:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "301:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "295:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "ChunkedX509Cert",
              "nameLocation": "64:15:5",
              "nodeType": "StructDefinition",
              "scope": 801,
              "src": "57:256:5",
              "visibility": "public"
            }
          ],
          "src": "32:282:5"
        },
        "id": 5
      }
    },
    "contracts": {
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ECDSA": {
          "abi": [
            {
              "inputs": [],
              "name": "ECDSAInvalidSignature",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "name": "ECDSAInvalidSignatureLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "ECDSAInvalidSignatureS",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202630ea7f3861ca5808e60f974f223e7c09c7e78c25ae4a3b493b749bab8512c764736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ADDRESS 0xEA PUSH32 0x3861CA5808E60F974F223E7C09C7E78C25AE4A3B493B749BAB8512C764736F6C PUSH4 0x4300081E STOP CALLER ",
              "sourceMap": "344:7470:0:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212202630ea7f3861ca5808e60f974f223e7c09c7e78c25ae4a3b493b749bab8512c764736f6c634300081e0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ADDRESS 0xEA PUSH32 0x3861CA5808E60F974F223E7C09C7E78C25AE4A3B493B749BAB8512C764736F6C PUSH4 0x4300081E STOP CALLER ",
              "sourceMap": "344:7470:0:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"
        }
      },
      "contract/AdminCertificateHelper.sol": {
        "AdminCertificateHelper": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ICertVerifier",
                  "name": "_certVerifier",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_authorizedSolutionHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ECDSAInvalidSignature",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "name": "ECDSAInvalidSignatureLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "ECDSAInvalidSignatureS",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "contract ICertVerifier",
                  "name": "oldCertVerifier",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "contract ICertVerifier",
                  "name": "newCertVerifier",
                  "type": "address"
                }
              ],
              "name": "CertVerifierSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "oldAdmin",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes[]",
                      "name": "nonSerializedParts",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "expirationDate",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "ca",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userData",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "publicKey",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "serialNumber",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrEnclave",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrSigner",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct ChunkedX509Cert[]",
                  "name": "certsChain",
                  "type": "tuple[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rootCertId",
                  "type": "uint256"
                }
              ],
              "name": "SetAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "oldAuthorizedSolutionHash",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAuthorizedSolutionHash",
                  "type": "bytes32"
                }
              ],
              "name": "SetAuthorizedSolutionHash",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes[]",
                      "name": "nonSerializedParts",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "expirationDate",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "ca",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userData",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "publicKey",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "serialNumber",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrEnclave",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrSigner",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ChunkedX509Cert[]",
                  "name": "_certsChain",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_rootCertId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "addAdmin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAdminData",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "_admin",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes[]",
                      "name": "nonSerializedParts",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "expirationDate",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "ca",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userData",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "publicKey",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "serialNumber",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrEnclave",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrSigner",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ChunkedX509Cert[]",
                  "name": "_certsChain",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_rootCertId",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAuthorizedSolutionHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCertVerifier",
              "outputs": [
                {
                  "internalType": "contract ICertVerifier",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSignatureNonce",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "isAdmin",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_authorizedSolutionHash",
                  "type": "bytes32"
                }
              ],
              "name": "setAuthorizedSolutionHash",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ICertVerifier",
                  "name": "_certVerifier",
                  "type": "address"
                }
              ],
              "name": "setCertVerifier",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803461019a57601f611d4a38819003918201601f19168301916001600160401b0383118484101761019f57808492604094855283398101031261019a5780516001600160a01b038116919082900361019a5760200151600080546001600160a01b03191633179055908015610149576002546040519190816001600160a01b0382167fc8b1d729ea7c9a12c8ebcaf5bbb64f5a001f331261d068920947589040a2d954600080a36001600160a01b0319161760025581156100f957506007549080604051927fb134f848761a2f3e71de218780593a57ad2bd1ab2139bede1c142ca96c822599600080a3600755611b9490816101b68239f35b62461bcd60e51b815260206004820152602560248201527f417574686f72697a6564536f6c7574696f6e486173682063616e6e6f74206265604482015264207a65726f60d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f6365727456657269666965722063616e6e6f74206265207a65726f206164647260448201526265737360e81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806310b0258c146113a457806324d7806c1461134d5780633f96591f1461122057806340c7d18f146111ec5780636dd5be81146105c857806379ba5097146104e35780638da5cb5b146104af5780638de1ecb2146104915780638f7a844b1461015f578063c3713cad146101415763f2fde38b1461009557600080fd5b3461013c57602060031936011261013c5760043573ffffffffffffffffffffffffffffffffffffffff811680910361013c5773ffffffffffffffffffffffffffffffffffffffff600054166100eb8133146114c1565b817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b600080fd5b3461013c57600060031936011261013c576020600754604051908152f35b3461013c57600060031936011261013c5773ffffffffffffffffffffffffffffffffffffffff60035416600554600454610198816118e1565b916101a6604051938461150c565b81835260208301809260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b8282106103725750505050604051938493606085019185526060602086015251809152608084019060808160051b86010193916000905b828210610225575050505060408301520390f35b9193949092957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8090820301825285519061012081018251906101208352815180915261014083019060206101408260051b86010193019160005b82811061032b575050505061031a836020936101006102f46102e26102c66102b489988960019c01518782038b89015261149c565b6040870151868203604088015261149c565b606086015160608601526080860151858203608087015261149c565b60a085015184820360a086015261149c565b9260c081015160c084015260e081015160e084015201519061010081840391015261149c565b970192019201869594939192610211565b90919293602080610366837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec08a60019603018752885161149c565b9601949301910161027f565b6040979495969751610120810181811067ffffffffffffffff82111761047b5760405284546103a0816118e1565b906103ae604051928361150c565b80825260208201876000526020600020906000905b83821061045e575050505060019282602092600994526103e48589016118f9565b838201526103f4600289016118f9565b60408201526003880154606082015261040f600489016118f9565b6080820152610420600589016118f9565b60a0820152600688015460c0820152600788015460e0820152610445600889016118f9565b61010082015281520194019101909296959493966101da565b60016020819261046d866118f9565b8152019301910190916103c3565b634e487b7160e01b600052604160045260246000fd5b3461013c57600060031936011261013c576020600654604051908152f35b3461013c57600060031936011261013c57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b3461013c57600060031936011261013c5760015473ffffffffffffffffffffffffffffffffffffffff81163303610584577fffffffffffffffffffffffff00000000000000000000000000000000000000006000549133828416176000551660015573ffffffffffffffffffffffffffffffffffffffff3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b606460405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fd5b3461013c57606060031936011261013c5760043567ffffffffffffffff811161013c573660238201121561013c57806004013567ffffffffffffffff811161013c576024820191602436918360051b01011161013c576044359160243567ffffffffffffffff841161013c573660238501121561013c5783600401359367ffffffffffffffff851161013c57366024868301011161013c5773ffffffffffffffffffffffffffffffffffffffff60025416602060405180927f4ff6338c00000000000000000000000000000000000000000000000000000000825281806106b4888b8b60048501611582565b03915afa8015611157576111bd575b5083156111a75760606106d68480611793565b013560075403611163576006549060206000610727604051838101903382524660408201523060608201528660808201526080815261071660a08261150c565b604051928392839251928391611479565b8101039060025afa156111575761075c9561074d610753926000519260243692016117c6565b906119b9565b909691966119f5565b60009473ffffffffffffffffffffffffffffffffffffffff8061079661078f6107858880611793565b608081019061180d565b36916117c6565b60208151910120169116036111135760001981146110ff5760010160065560035492337fffffffffffffffffffffffff00000000000000000000000000000000000000008516176003556801000000000000000081116110eb5760045481600455808210610fc1575b5060048552847f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b845b83831061088757505050907f2ff02e3194f5700f91a1e89169623293cdf4b5529c368e4810b3b8593203c8cc918160055561088160405192839273ffffffffffffffffffffffffffffffffffffffff3398169684611582565b0390a380f35b6108918187611793565b8035601e1982360301811215610fbd57810180359067ffffffffffffffff8211610fb9576020018160051b36038113610fb957680100000000000000008211610bd8578454828655808310610f8c575b5080858c5260208c20918c915b848310610e5f5750505050506001830161090b602083018361180d565b67ffffffffffffffff8111610c8c578b6109258454611840565b601f8111610e2f575b50918c601f8311600114610dca5761095c93909183610bec575b50506000198260011b9260031b1c19161790565b90555b60028301610970604083018361180d565b67ffffffffffffffff8111610c8c578b61098a8454611840565b601f8111610d9a575b50918c601f8311600114610d35576109c093909183610bec5750506000198260011b9260031b1c19161790565b90555b60608101356003840155600483016109de608083018361180d565b67ffffffffffffffff8111610c8c578b6109f88454611840565b601f8111610d05575b50918c601f8311600114610ca057610a2e93909183610bec5750506000198260011b9260031b1c19161790565b90555b60058301610a4260a083018361180d565b67ffffffffffffffff8111610c8c578b610a5c8454611840565b601f8111610c5c575b50918c601f8311600114610bf757610a9293909183610bec5750506000198260011b9260031b1c19161790565b90555b60c0810135600684015560e08101356007840155610abc600884019161010081019061180d565b9067ffffffffffffffff8211610bd857610ad68354611840565b601f8111610b9d575b508a908b601f8411600114610b3157836020946001979460099794610b179492610b265750506000198260011b9260031b1c19161790565b90555b01920192019190610828565b013590508f80610948565b50838c5260208c2091601f1984168d5b818110610b85575093600196936009969388938360209810610b6b575b505050811b019055610b1a565b60001960f88560031b161c199101351690558e8080610b5e565b91936020600181928787013581550195019201610b41565b610bc890848d5260208d20601f850160051c81019160208610610bce575b601f0160051c019061187a565b8b610adf565b9091508190610bbb565b60248b634e487b7160e01b81526041600452fd5b013590508d80610948565b9192601f19841685845260208420935b818110610c445750908460019594939210610c2a575b505050811b019055610a95565b60001960f88560031b161c199101351690558c8080610c1d565b91936020600181928787013581550195019201610c07565b60208286610c85945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d610a65565b60248c634e487b7160e01b81526041600452fd5b9192601f19841685845260208420935b818110610ced5750908460019594939210610cd3575b505050811b019055610a31565b60001960f88560031b161c199101351690558c8080610cc6565b91936020600181928787013581550195019201610cb0565b60208286610d2e945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d610a01565b9192601f19841685845260208420935b818110610d825750908460019594939210610d68575b505050811b0190556109c3565b60001960f88560031b161c199101351690558c8080610d5b565b91936020600181928787013581550195019201610d45565b60208286610dc3945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d610993565b9192601f19841685845260208420935b818110610e175750908460019594939210610dfd575b505050811b01905561095f565b60001960f88560031b161c199101351690558c8080610df0565b91936020600181928787013581550195019201610dda565b60208286610e58945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d61092e565b610e69818361180d565b9067ffffffffffffffff8211610f77578f90610e858754611840565b601f8111610f47575b5081601f8411600114610edd578360019592946020948796610ec39492610ed25750506000198260011b9260031b1c19161790565b87555b019401920191926108ee565b013590503880610948565b91601f19841688845260208420935b818110610f2f5750936020936001969387969383889510610f15575b505050811b018755610ec6565b60001960f88560031b161c19910135169055388080610f08565b91936020600181928787013581550195019201610eec565b610f719088845260208420601f860160051c81019160208710610bce57601f0160051c019061187a565b38610e8e565b5060248f634e487b7160e01b81526041600452fd5b858c528260208d2091820191015b818110610fa757506108e1565b80610fb3600192611891565b01610f9a565b8a80fd5b8980fd5b806009029060098204036110d75781600902906009820483036110c357600487527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015b81811061103557506107ff565b805487825580611098575b5080611050600160099301611891565b61105c60028201611891565b87600382015561106e60048201611891565b61107a60058201611891565b87600682015587600782015561109260088201611891565b01611028565b81885260208820908101905b8181106110b15750611040565b806110bd600192611891565b016110a4565b602487634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526011600452fd5b602485634e487b7160e01b81526041600452fd5b602485634e487b7160e01b81526011600452fd5b606460405162461bcd60e51b815260206004820152601660248201527f496e76616c69642064617461207369676e6174757265000000000000000000006044820152fd5b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920617574686f72697a656420736f6c7574696f6e00000000000000006044820152fd5b634e487b7160e01b600052603260045260246000fd5b6020813d6020116111e4575b816111d66020938361150c565b8101031261013c57516106c3565b3d91506111c9565b3461013c57600060031936011261013c57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b3461013c57602060031936011261013c5760043573ffffffffffffffffffffffffffffffffffffffff811680910361013c5761127573ffffffffffffffffffffffffffffffffffffffff6000541633146114c1565b80156112e3577fffffffffffffffffffffffff00000000000000000000000000000000000000006002548273ffffffffffffffffffffffffffffffffffffffff82167fc8b1d729ea7c9a12c8ebcaf5bbb64f5a001f331261d068920947589040a2d954600080a31617600255005b608460405162461bcd60e51b815260206004820152602360248201527f6365727456657269666965722063616e6e6f74206265207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b3461013c57602060031936011261013c5760043573ffffffffffffffffffffffffffffffffffffffff811680910361013c5760209073ffffffffffffffffffffffffffffffffffffffff6003541614604051908152f35b3461013c57602060031936011261013c576004356113db73ffffffffffffffffffffffffffffffffffffffff6000541633146114c1565b801561140f57806007547fb134f848761a2f3e71de218780593a57ad2bd1ab2139bede1c142ca96c822599600080a3600755005b608460405162461bcd60e51b815260206004820152602560248201527f417574686f72697a6564536f6c7574696f6e486173682063616e6e6f7420626560448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b60005b83811061148c5750506000910152565b818101518382015260200161147c565b90601f19601f6020936114ba81518092818752878088019101611479565b0116010190565b156114c857565b606460405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b90601f601f19910116810190811067ffffffffffffffff82111761047b57604052565b601f8260209493601f19938186528686013760008582860101520116010190565b9035601e198236030181121561013c57016020813591019167ffffffffffffffff821161013c57813603831361013c57565b939291806040860160408752526060850160608260051b87010191836000907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee1813603015b8383106115dc57505050505060209150930152565b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a820301865286358281121561013c5783019061012081018235601e198436030181121561013c5783016020813591019167ffffffffffffffff821161013c578160051b90813603841361013c576101208552829052830161014090810192919084018260005b838110611741575050505050611732836020936117236117036116e86116c36116a8899861169b8a60019d0189611550565b908883038c8a015261152f565b6116b56040880188611550565b90878303604089015261152f565b606086013560608601526116da6080870187611550565b90868303608088015261152f565b6116f560a0860186611550565b9085830360a087015261152f565b9260c081013560c084015260e081013560e0840152610100810190611550565b9161010081850391015261152f565b980197960194930191906115c7565b9091929394602080611786837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec08b600196030188526117808a88611550565b9061152f565b9701959401929101611669565b9035907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18136030182121561013c570190565b92919267ffffffffffffffff821161047b57604051916117f06020601f19601f840116018461150c565b82948184528183011161013c578281602093846000960137010152565b903590601e198136030182121561013c570180359067ffffffffffffffff821161013c5760200191813603831361013c57565b90600182811c92168015611870575b602083101461185a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161184f565b818110611885575050565b6000815560010161187a565b61189b8154611840565b90816118a5575050565b81601f600093116001146118b85750555b565b818352602083206118d491601f0160051c81019060010161187a565b8082528160208120915555565b67ffffffffffffffff811161047b5760051b60200190565b906040519182600082549261190d84611840565b80845293600181169081156119795750600114611932575b506118b69250038361150c565b90506000929192526020600020906000915b81831061195d5750509060206118b69282010138611925565b6020919350806001915483858901015201910190918492611944565b602093506118b69592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010138611925565b81519190604183036119ea576119e392506020820151906060604084015193015160001a90611ac8565b9192909190565b505060009160029190565b9190916004811015611ab25780611a0b57509050565b600060018203611a3f577ff645eedf0000000000000000000000000000000000000000000000000000000060005260046000fd5b5060028103611a7657827ffce698f70000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9091600360009214611a86575050565b602492507fd78bce0c000000000000000000000000000000000000000000000000000000008252600452fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611b52579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa156111575760005173ffffffffffffffffffffffffffffffffffffffff811615611b465790600090600090565b50600090600190600090565b5050506000916003919056fea26469706673582212201671f1c43dc5c8346d69577e963c6aabefb6c83c0455b001df73dd691166b3ee64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x19A JUMPI PUSH1 0x1F PUSH2 0x1D4A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x19F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x19A JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x19A JUMPI PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SWAP1 DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH32 0xC8B1D729EA7C9A12C8EBCAF5BBB64F5A001F331261D068920947589040A2D954 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x2 SSTORE DUP2 ISZERO PUSH2 0xF9 JUMPI POP PUSH1 0x7 SLOAD SWAP1 DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0xB134F848761A2F3E71DE218780593A57AD2BD1AB2139BEDE1C142CA96C822599 PUSH1 0x0 DUP1 LOG3 PUSH1 0x7 SSTORE PUSH2 0x1B94 SWAP1 DUP2 PUSH2 0x1B6 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417574686F72697A6564536F6C7574696F6E486173682063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6365727456657269666965722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10B0258C EQ PUSH2 0x13A4 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x134D JUMPI DUP1 PUSH4 0x3F96591F EQ PUSH2 0x1220 JUMPI DUP1 PUSH4 0x40C7D18F EQ PUSH2 0x11EC JUMPI DUP1 PUSH4 0x6DD5BE81 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x8DE1ECB2 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x8F7A844B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xC3713CAD EQ PUSH2 0x141 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH2 0xEB DUP2 CALLER EQ PUSH2 0x14C1 JUMP JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x198 DUP2 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 PUSH2 0x1A6 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x150C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x372 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 ADD SWAP2 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH1 0x80 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x225 JUMPI POP POP POP POP PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 SWAP5 SWAP1 SWAP3 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 SWAP1 DUP3 SUB ADD DUP3 MSTORE DUP6 MLOAD SWAP1 PUSH2 0x120 DUP2 ADD DUP3 MLOAD SWAP1 PUSH2 0x120 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 PUSH1 0x20 PUSH2 0x140 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x32B JUMPI POP POP POP POP PUSH2 0x31A DUP4 PUSH1 0x20 SWAP4 PUSH2 0x100 PUSH2 0x2F4 PUSH2 0x2E2 PUSH2 0x2C6 PUSH2 0x2B4 DUP10 SWAP9 DUP10 PUSH1 0x1 SWAP13 ADD MLOAD DUP8 DUP3 SUB DUP12 DUP10 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x100 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST SWAP8 ADD SWAP3 ADD SWAP3 ADD DUP7 SWAP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x211 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x366 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC0 DUP11 PUSH1 0x1 SWAP7 SUB ADD DUP8 MSTORE DUP9 MLOAD PUSH2 0x149C JUMP JUMPDEST SWAP7 ADD SWAP5 SWAP4 ADD SWAP2 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 SWAP8 SWAP5 SWAP6 SWAP7 SWAP8 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47B JUMPI PUSH1 0x40 MSTORE DUP5 SLOAD PUSH2 0x3A0 DUP2 PUSH2 0x18E1 JUMP JUMPDEST SWAP1 PUSH2 0x3AE PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x150C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x45E JUMPI POP POP POP POP PUSH1 0x1 SWAP3 DUP3 PUSH1 0x20 SWAP3 PUSH1 0x9 SWAP5 MSTORE PUSH2 0x3E4 DUP6 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x3F4 PUSH1 0x2 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP9 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x40F PUSH1 0x4 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x420 PUSH1 0x5 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x445 PUSH1 0x8 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP7 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x46D DUP7 PUSH2 0x18F9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x3C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER SUB PUSH2 0x584 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x0 SLOAD SWAP2 CALLER DUP3 DUP5 AND OR PUSH1 0x0 SSTORE AND PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x13C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x13C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x13C JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x13C JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x13C JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x13C JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x13C JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP4 ADD ADD GT PUSH2 0x13C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH32 0x4FF6338C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP1 PUSH2 0x6B4 DUP9 DUP12 DUP12 PUSH1 0x4 DUP6 ADD PUSH2 0x1582 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1157 JUMPI PUSH2 0x11BD JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x60 PUSH2 0x6D6 DUP5 DUP1 PUSH2 0x1793 JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x7 SLOAD SUB PUSH2 0x1163 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH1 0x20 PUSH1 0x0 PUSH2 0x727 PUSH1 0x40 MLOAD DUP4 DUP2 ADD SWAP1 CALLER DUP3 MSTORE CHAINID PUSH1 0x40 DUP3 ADD MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE DUP7 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x716 PUSH1 0xA0 DUP3 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1479 JUMP JUMPDEST DUP2 ADD SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x1157 JUMPI PUSH2 0x75C SWAP6 PUSH2 0x74D PUSH2 0x753 SWAP3 PUSH1 0x0 MLOAD SWAP3 PUSH1 0x24 CALLDATASIZE SWAP3 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP1 PUSH2 0x19B9 JUMP JUMPDEST SWAP1 SWAP7 SWAP2 SWAP7 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x796 PUSH2 0x78F PUSH2 0x785 DUP9 DUP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 PUSH2 0x180D JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 AND SWAP2 AND SUB PUSH2 0x1113 JUMPI PUSH1 0x0 NOT DUP2 EQ PUSH2 0x10FF JUMPI PUSH1 0x1 ADD PUSH1 0x6 SSTORE PUSH1 0x3 SLOAD SWAP3 CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP6 AND OR PUSH1 0x3 SSTORE PUSH9 0x10000000000000000 DUP2 GT PUSH2 0x10EB JUMPI PUSH1 0x4 SLOAD DUP2 PUSH1 0x4 SSTORE DUP1 DUP3 LT PUSH2 0xFC1 JUMPI JUMPDEST POP PUSH1 0x4 DUP6 MSTORE DUP5 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x887 JUMPI POP POP POP SWAP1 PUSH32 0x2FF02E3194F5700F91A1E89169623293CDF4B5529C368E4810B3B8593203C8CC SWAP2 DUP2 PUSH1 0x5 SSTORE PUSH2 0x881 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER SWAP9 AND SWAP7 DUP5 PUSH2 0x1582 JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH2 0x891 DUP2 DUP8 PUSH2 0x1793 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xFBD JUMPI DUP2 ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xFB9 JUMPI PUSH1 0x20 ADD DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP2 SGT PUSH2 0xFB9 JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0xBD8 JUMPI DUP5 SLOAD DUP3 DUP7 SSTORE DUP1 DUP4 LT PUSH2 0xF8C JUMPI JUMPDEST POP DUP1 DUP6 DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 SWAP2 DUP13 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xE5F JUMPI POP POP POP POP POP PUSH1 0x1 DUP4 ADD PUSH2 0x90B PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0x925 DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE2F JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDCA JUMPI PUSH2 0x95C SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x970 PUSH1 0x40 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0x98A DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD9A JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD35 JUMPI PUSH2 0x9C0 SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9DE PUSH1 0x80 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0x9F8 DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD05 JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCA0 JUMPI PUSH2 0xA2E SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x5 DUP4 ADD PUSH2 0xA42 PUSH1 0xA0 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0xA5C DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC5C JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBF7 JUMPI PUSH2 0xA92 SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH2 0xABC PUSH1 0x8 DUP5 ADD SWAP2 PUSH2 0x100 DUP2 ADD SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xBD8 JUMPI PUSH2 0xAD6 DUP4 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB9D JUMPI JUMPDEST POP DUP11 SWAP1 DUP12 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xB31 JUMPI DUP4 PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP8 SWAP5 PUSH1 0x9 SWAP8 SWAP5 PUSH2 0xB17 SWAP5 SWAP3 PUSH2 0xB26 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP16 DUP1 PUSH2 0x948 JUMP JUMPDEST POP DUP4 DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xB85 JUMPI POP SWAP4 PUSH1 0x1 SWAP7 SWAP4 PUSH1 0x9 SWAP7 SWAP4 DUP9 SWAP4 DUP4 PUSH1 0x20 SWAP9 LT PUSH2 0xB6B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0xB5E JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xB41 JUMP JUMPDEST PUSH2 0xBC8 SWAP1 DUP5 DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBCE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 PUSH2 0xADF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP14 DUP1 PUSH2 0x948 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xC44 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xC2A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xC1D JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xC85 SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xCED JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xCD3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xCC6 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xD2E SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0xA01 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xD82 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD68 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xD5B JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xDC3 SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0x993 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xE17 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xDFD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x95F JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xDF0 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xE58 SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0x92E JUMP JUMPDEST PUSH2 0xE69 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF77 JUMPI DUP16 SWAP1 PUSH2 0xE85 DUP8 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF47 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xEDD JUMPI DUP4 PUSH1 0x1 SWAP6 SWAP3 SWAP5 PUSH1 0x20 SWAP5 DUP8 SWAP7 PUSH2 0xEC3 SWAP5 SWAP3 PUSH2 0xED2 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP3 ADD SWAP2 SWAP3 PUSH2 0x8EE JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH1 0x1F NOT DUP5 AND DUP9 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xF2F JUMPI POP SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP4 DUP9 SWAP6 LT PUSH2 0xF15 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xF08 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0xF71 SWAP1 DUP9 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP8 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST CODESIZE PUSH2 0xE8E JUMP JUMPDEST POP PUSH1 0x24 DUP16 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP6 DUP13 MSTORE DUP3 PUSH1 0x20 DUP14 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xFA7 JUMPI POP PUSH2 0x8E1 JUMP JUMPDEST DUP1 PUSH2 0xFB3 PUSH1 0x1 SWAP3 PUSH2 0x1891 JUMP JUMPDEST ADD PUSH2 0xF9A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 MUL SWAP1 PUSH1 0x9 DUP3 DIV SUB PUSH2 0x10D7 JUMPI DUP2 PUSH1 0x9 MUL SWAP1 PUSH1 0x9 DUP3 DIV DUP4 SUB PUSH2 0x10C3 JUMPI PUSH1 0x4 DUP8 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1035 JUMPI POP PUSH2 0x7FF JUMP JUMPDEST DUP1 SLOAD DUP8 DUP3 SSTORE DUP1 PUSH2 0x1098 JUMPI JUMPDEST POP DUP1 PUSH2 0x1050 PUSH1 0x1 PUSH1 0x9 SWAP4 ADD PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x105C PUSH1 0x2 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST DUP8 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x106E PUSH1 0x4 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x107A PUSH1 0x5 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST DUP8 PUSH1 0x6 DUP3 ADD SSTORE DUP8 PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x1092 PUSH1 0x8 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST ADD PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 SWAP1 DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x10B1 JUMPI POP PUSH2 0x1040 JUMP JUMPDEST DUP1 PUSH2 0x10BD PUSH1 0x1 SWAP3 PUSH2 0x1891 JUMP JUMPDEST ADD PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x24 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642064617461207369676E617475726500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F72697A656420736F6C7574696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11E4 JUMPI JUMPDEST DUP2 PUSH2 0x11D6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x150C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13C JUMPI MLOAD PUSH2 0x6C3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11C9 JUMP JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH2 0x1275 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x14C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12E3 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH32 0xC8B1D729EA7C9A12C8EBCAF5BBB64F5A001F331261D068920947589040A2D954 PUSH1 0x0 DUP1 LOG3 AND OR PUSH1 0x2 SSTORE STOP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6365727456657269666965722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x13DB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x14C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI DUP1 PUSH1 0x7 SLOAD PUSH32 0xB134F848761A2F3E71DE218780593A57AD2BD1AB2139BEDE1C142CA96C822599 PUSH1 0x0 DUP1 LOG3 PUSH1 0x7 SSTORE STOP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417574686F72697A6564536F6C7574696F6E486173682063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x148C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x147C JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x14BA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x1479 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x14C8 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH1 0x1F NOT SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x13C JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x13C JUMPI DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x13C JUMPI JUMP JUMPDEST SWAP4 SWAP3 SWAP2 DUP1 PUSH1 0x40 DUP7 ADD PUSH1 0x40 DUP8 MSTORE MSTORE PUSH1 0x60 DUP6 ADD PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP8 ADD ADD SWAP2 DUP4 PUSH1 0x0 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEE1 DUP2 CALLDATASIZE SUB ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x15DC JUMPI POP POP POP POP POP PUSH1 0x20 SWAP2 POP SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP11 DUP3 SUB ADD DUP7 MSTORE DUP7 CALLDATALOAD DUP3 DUP2 SLT ISZERO PUSH2 0x13C JUMPI DUP4 ADD SWAP1 PUSH2 0x120 DUP2 ADD DUP3 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x13C JUMPI DUP4 ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x13C JUMPI DUP2 PUSH1 0x5 SHL SWAP1 DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0x13C JUMPI PUSH2 0x120 DUP6 MSTORE DUP3 SWAP1 MSTORE DUP4 ADD PUSH2 0x140 SWAP1 DUP2 ADD SWAP3 SWAP2 SWAP1 DUP5 ADD DUP3 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1741 JUMPI POP POP POP POP POP PUSH2 0x1732 DUP4 PUSH1 0x20 SWAP4 PUSH2 0x1723 PUSH2 0x1703 PUSH2 0x16E8 PUSH2 0x16C3 PUSH2 0x16A8 DUP10 SWAP9 PUSH2 0x169B DUP11 PUSH1 0x1 SWAP14 ADD DUP10 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP9 DUP4 SUB DUP13 DUP11 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST PUSH2 0x16B5 PUSH1 0x40 DUP9 ADD DUP9 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP8 DUP4 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x16DA PUSH1 0x80 DUP8 ADD DUP8 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP7 DUP4 SUB PUSH1 0x80 DUP9 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST PUSH2 0x16F5 PUSH1 0xA0 DUP7 ADD DUP7 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP6 DUP4 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD SWAP1 PUSH2 0x1550 JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST SWAP9 ADD SWAP8 SWAP7 ADD SWAP5 SWAP4 ADD SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1786 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC0 DUP12 PUSH1 0x1 SWAP7 SUB ADD DUP9 MSTORE PUSH2 0x1780 DUP11 DUP9 PUSH2 0x1550 JUMP JUMPDEST SWAP1 PUSH2 0x152F JUMP JUMPDEST SWAP8 ADD SWAP6 SWAP5 ADD SWAP3 SWAP2 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x13C JUMPI ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x17F0 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x150C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x13C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x13C JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x13C JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x13C JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1870 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x185A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x184F JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1885 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x187A JUMP JUMPDEST PUSH2 0x189B DUP2 SLOAD PUSH2 0x1840 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x18A5 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x18B8 JUMPI POP SSTORE JUMPDEST JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x18D4 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x187A JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x190D DUP5 PUSH2 0x1840 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1979 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1932 JUMPI JUMPDEST POP PUSH2 0x18B6 SWAP3 POP SUB DUP4 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x195D JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x18B6 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0x18B6 SWAP6 SWAP3 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x1925 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x19EA JUMPI PUSH2 0x19E3 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1AB2 JUMPI DUP1 PUSH2 0x1A0B JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x1A3F JUMPI PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x1A76 JUMPI DUP3 PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x1A86 JUMPI POP POP JUMP JUMPDEST PUSH1 0x24 SWAP3 POP PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1B52 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1B46 JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH18 0xF1C43DC5C8346D69577E963C6AABEFB6C83C DIV SSTORE 0xB0 ADD 0xDF PUSH20 0xDD691166B3EE64736F6C634300081E0033000000 ",
              "sourceMap": "235:2977:1:-:0;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;-1:-1:-1;;;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;235:2977:1;;;;;;;;;;;;-1:-1:-1;235:2977:1;;-1:-1:-1;;;;;;235:2977:1;455:10:2;235:2977:1;;;;2731:36;;235:2977;;2833:12;235:2977;;;;;;-1:-1:-1;;;;;235:2977:1;;2817:44;-1:-1:-1;;2817:44:1;-1:-1:-1;;;;;;235:2977:1;;2833:12;235:2977;2996:28;;235:2977;;;3102:22;235:2977;;;;;3076:74;;-1:-1:-1;3076:74:1;;3102:22;235:2977;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;-1:-1:-1;235:2977:1;;;;;;-1:-1:-1;235:2977:1;;;;;-1:-1:-1;235:2977:1"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_available_length_bytes": {
                  "entryPoint": 6086,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_array_struct_ChunkedX509Cert_calldata_dyn_calldata_uint256": {
                  "entryPoint": 5506,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 5276,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bytes_calldata": {
                  "entryPoint": 5423,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "access_calldata_tail_bytes_calldata": {
                  "entryPoint": 6157,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "access_calldata_tail_struct_ChunkedX509Cert_calldata": {
                  "entryPoint": 6035,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_array_struct_ChunkedX509Cert_dyn": {
                  "entryPoint": 6369,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "calldata_access_bytes_calldata": {
                  "entryPoint": 5456,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "clear_storage_range_bytes1": {
                  "entryPoint": 6266,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_from_storage_to_memory_bytes": {
                  "entryPoint": 6393,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 5241,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 6208,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 5388,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_throwError": {
                  "entryPoint": 6645,
                  "id": 346,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_tryRecover": {
                  "entryPoint": 6585,
                  "id": 73,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "fun_tryRecover_261": {
                  "entryPoint": 6856,
                  "id": 261,
                  "parameterSlots": 4,
                  "returnSlots": 3
                },
                "require_helper_stringliteral_3bfd": {
                  "entryPoint": 5313,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_set_to_zero_bytes": {
                  "entryPoint": 6289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806310b0258c146113a457806324d7806c1461134d5780633f96591f1461122057806340c7d18f146111ec5780636dd5be81146105c857806379ba5097146104e35780638da5cb5b146104af5780638de1ecb2146104915780638f7a844b1461015f578063c3713cad146101415763f2fde38b1461009557600080fd5b3461013c57602060031936011261013c5760043573ffffffffffffffffffffffffffffffffffffffff811680910361013c5773ffffffffffffffffffffffffffffffffffffffff600054166100eb8133146114c1565b817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b600080fd5b3461013c57600060031936011261013c576020600754604051908152f35b3461013c57600060031936011261013c5773ffffffffffffffffffffffffffffffffffffffff60035416600554600454610198816118e1565b916101a6604051938461150c565b81835260208301809260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b8282106103725750505050604051938493606085019185526060602086015251809152608084019060808160051b86010193916000905b828210610225575050505060408301520390f35b9193949092957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8090820301825285519061012081018251906101208352815180915261014083019060206101408260051b86010193019160005b82811061032b575050505061031a836020936101006102f46102e26102c66102b489988960019c01518782038b89015261149c565b6040870151868203604088015261149c565b606086015160608601526080860151858203608087015261149c565b60a085015184820360a086015261149c565b9260c081015160c084015260e081015160e084015201519061010081840391015261149c565b970192019201869594939192610211565b90919293602080610366837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec08a60019603018752885161149c565b9601949301910161027f565b6040979495969751610120810181811067ffffffffffffffff82111761047b5760405284546103a0816118e1565b906103ae604051928361150c565b80825260208201876000526020600020906000905b83821061045e575050505060019282602092600994526103e48589016118f9565b838201526103f4600289016118f9565b60408201526003880154606082015261040f600489016118f9565b6080820152610420600589016118f9565b60a0820152600688015460c0820152600788015460e0820152610445600889016118f9565b61010082015281520194019101909296959493966101da565b60016020819261046d866118f9565b8152019301910190916103c3565b634e487b7160e01b600052604160045260246000fd5b3461013c57600060031936011261013c576020600654604051908152f35b3461013c57600060031936011261013c57602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b3461013c57600060031936011261013c5760015473ffffffffffffffffffffffffffffffffffffffff81163303610584577fffffffffffffffffffffffff00000000000000000000000000000000000000006000549133828416176000551660015573ffffffffffffffffffffffffffffffffffffffff3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b606460405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fd5b3461013c57606060031936011261013c5760043567ffffffffffffffff811161013c573660238201121561013c57806004013567ffffffffffffffff811161013c576024820191602436918360051b01011161013c576044359160243567ffffffffffffffff841161013c573660238501121561013c5783600401359367ffffffffffffffff851161013c57366024868301011161013c5773ffffffffffffffffffffffffffffffffffffffff60025416602060405180927f4ff6338c00000000000000000000000000000000000000000000000000000000825281806106b4888b8b60048501611582565b03915afa8015611157576111bd575b5083156111a75760606106d68480611793565b013560075403611163576006549060206000610727604051838101903382524660408201523060608201528660808201526080815261071660a08261150c565b604051928392839251928391611479565b8101039060025afa156111575761075c9561074d610753926000519260243692016117c6565b906119b9565b909691966119f5565b60009473ffffffffffffffffffffffffffffffffffffffff8061079661078f6107858880611793565b608081019061180d565b36916117c6565b60208151910120169116036111135760001981146110ff5760010160065560035492337fffffffffffffffffffffffff00000000000000000000000000000000000000008516176003556801000000000000000081116110eb5760045481600455808210610fc1575b5060048552847f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b845b83831061088757505050907f2ff02e3194f5700f91a1e89169623293cdf4b5529c368e4810b3b8593203c8cc918160055561088160405192839273ffffffffffffffffffffffffffffffffffffffff3398169684611582565b0390a380f35b6108918187611793565b8035601e1982360301811215610fbd57810180359067ffffffffffffffff8211610fb9576020018160051b36038113610fb957680100000000000000008211610bd8578454828655808310610f8c575b5080858c5260208c20918c915b848310610e5f5750505050506001830161090b602083018361180d565b67ffffffffffffffff8111610c8c578b6109258454611840565b601f8111610e2f575b50918c601f8311600114610dca5761095c93909183610bec575b50506000198260011b9260031b1c19161790565b90555b60028301610970604083018361180d565b67ffffffffffffffff8111610c8c578b61098a8454611840565b601f8111610d9a575b50918c601f8311600114610d35576109c093909183610bec5750506000198260011b9260031b1c19161790565b90555b60608101356003840155600483016109de608083018361180d565b67ffffffffffffffff8111610c8c578b6109f88454611840565b601f8111610d05575b50918c601f8311600114610ca057610a2e93909183610bec5750506000198260011b9260031b1c19161790565b90555b60058301610a4260a083018361180d565b67ffffffffffffffff8111610c8c578b610a5c8454611840565b601f8111610c5c575b50918c601f8311600114610bf757610a9293909183610bec5750506000198260011b9260031b1c19161790565b90555b60c0810135600684015560e08101356007840155610abc600884019161010081019061180d565b9067ffffffffffffffff8211610bd857610ad68354611840565b601f8111610b9d575b508a908b601f8411600114610b3157836020946001979460099794610b179492610b265750506000198260011b9260031b1c19161790565b90555b01920192019190610828565b013590508f80610948565b50838c5260208c2091601f1984168d5b818110610b85575093600196936009969388938360209810610b6b575b505050811b019055610b1a565b60001960f88560031b161c199101351690558e8080610b5e565b91936020600181928787013581550195019201610b41565b610bc890848d5260208d20601f850160051c81019160208610610bce575b601f0160051c019061187a565b8b610adf565b9091508190610bbb565b60248b634e487b7160e01b81526041600452fd5b013590508d80610948565b9192601f19841685845260208420935b818110610c445750908460019594939210610c2a575b505050811b019055610a95565b60001960f88560031b161c199101351690558c8080610c1d565b91936020600181928787013581550195019201610c07565b60208286610c85945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d610a65565b60248c634e487b7160e01b81526041600452fd5b9192601f19841685845260208420935b818110610ced5750908460019594939210610cd3575b505050811b019055610a31565b60001960f88560031b161c199101351690558c8080610cc6565b91936020600181928787013581550195019201610cb0565b60208286610d2e945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d610a01565b9192601f19841685845260208420935b818110610d825750908460019594939210610d68575b505050811b0190556109c3565b60001960f88560031b161c199101351690558c8080610d5b565b91936020600181928787013581550195019201610d45565b60208286610dc3945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d610993565b9192601f19841685845260208420935b818110610e175750908460019594939210610dfd575b505050811b01905561095f565b60001960f88560031b161c199101351690558c8080610df0565b91936020600181928787013581550195019201610dda565b60208286610e58945220601f840160051c81019160208510610bce57601f0160051c019061187a565b8b8d61092e565b610e69818361180d565b9067ffffffffffffffff8211610f77578f90610e858754611840565b601f8111610f47575b5081601f8411600114610edd578360019592946020948796610ec39492610ed25750506000198260011b9260031b1c19161790565b87555b019401920191926108ee565b013590503880610948565b91601f19841688845260208420935b818110610f2f5750936020936001969387969383889510610f15575b505050811b018755610ec6565b60001960f88560031b161c19910135169055388080610f08565b91936020600181928787013581550195019201610eec565b610f719088845260208420601f860160051c81019160208710610bce57601f0160051c019061187a565b38610e8e565b5060248f634e487b7160e01b81526041600452fd5b858c528260208d2091820191015b818110610fa757506108e1565b80610fb3600192611891565b01610f9a565b8a80fd5b8980fd5b806009029060098204036110d75781600902906009820483036110c357600487527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015b81811061103557506107ff565b805487825580611098575b5080611050600160099301611891565b61105c60028201611891565b87600382015561106e60048201611891565b61107a60058201611891565b87600682015587600782015561109260088201611891565b01611028565b81885260208820908101905b8181106110b15750611040565b806110bd600192611891565b016110a4565b602487634e487b7160e01b81526011600452fd5b602486634e487b7160e01b81526011600452fd5b602485634e487b7160e01b81526041600452fd5b602485634e487b7160e01b81526011600452fd5b606460405162461bcd60e51b815260206004820152601660248201527f496e76616c69642064617461207369676e6174757265000000000000000000006044820152fd5b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920617574686f72697a656420736f6c7574696f6e00000000000000006044820152fd5b634e487b7160e01b600052603260045260246000fd5b6020813d6020116111e4575b816111d66020938361150c565b8101031261013c57516106c3565b3d91506111c9565b3461013c57600060031936011261013c57602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b3461013c57602060031936011261013c5760043573ffffffffffffffffffffffffffffffffffffffff811680910361013c5761127573ffffffffffffffffffffffffffffffffffffffff6000541633146114c1565b80156112e3577fffffffffffffffffffffffff00000000000000000000000000000000000000006002548273ffffffffffffffffffffffffffffffffffffffff82167fc8b1d729ea7c9a12c8ebcaf5bbb64f5a001f331261d068920947589040a2d954600080a31617600255005b608460405162461bcd60e51b815260206004820152602360248201527f6365727456657269666965722063616e6e6f74206265207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b3461013c57602060031936011261013c5760043573ffffffffffffffffffffffffffffffffffffffff811680910361013c5760209073ffffffffffffffffffffffffffffffffffffffff6003541614604051908152f35b3461013c57602060031936011261013c576004356113db73ffffffffffffffffffffffffffffffffffffffff6000541633146114c1565b801561140f57806007547fb134f848761a2f3e71de218780593a57ad2bd1ab2139bede1c142ca96c822599600080a3600755005b608460405162461bcd60e51b815260206004820152602560248201527f417574686f72697a6564536f6c7574696f6e486173682063616e6e6f7420626560448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b60005b83811061148c5750506000910152565b818101518382015260200161147c565b90601f19601f6020936114ba81518092818752878088019101611479565b0116010190565b156114c857565b606460405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b90601f601f19910116810190811067ffffffffffffffff82111761047b57604052565b601f8260209493601f19938186528686013760008582860101520116010190565b9035601e198236030181121561013c57016020813591019167ffffffffffffffff821161013c57813603831361013c57565b939291806040860160408752526060850160608260051b87010191836000907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee1813603015b8383106115dc57505050505060209150930152565b90919293947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a820301865286358281121561013c5783019061012081018235601e198436030181121561013c5783016020813591019167ffffffffffffffff821161013c578160051b90813603841361013c576101208552829052830161014090810192919084018260005b838110611741575050505050611732836020936117236117036116e86116c36116a8899861169b8a60019d0189611550565b908883038c8a015261152f565b6116b56040880188611550565b90878303604089015261152f565b606086013560608601526116da6080870187611550565b90868303608088015261152f565b6116f560a0860186611550565b9085830360a087015261152f565b9260c081013560c084015260e081013560e0840152610100810190611550565b9161010081850391015261152f565b980197960194930191906115c7565b9091929394602080611786837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec08b600196030188526117808a88611550565b9061152f565b9701959401929101611669565b9035907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee18136030182121561013c570190565b92919267ffffffffffffffff821161047b57604051916117f06020601f19601f840116018461150c565b82948184528183011161013c578281602093846000960137010152565b903590601e198136030182121561013c570180359067ffffffffffffffff821161013c5760200191813603831361013c57565b90600182811c92168015611870575b602083101461185a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161184f565b818110611885575050565b6000815560010161187a565b61189b8154611840565b90816118a5575050565b81601f600093116001146118b85750555b565b818352602083206118d491601f0160051c81019060010161187a565b8082528160208120915555565b67ffffffffffffffff811161047b5760051b60200190565b906040519182600082549261190d84611840565b80845293600181169081156119795750600114611932575b506118b69250038361150c565b90506000929192526020600020906000915b81831061195d5750509060206118b69282010138611925565b6020919350806001915483858901015201910190918492611944565b602093506118b69592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b82010138611925565b81519190604183036119ea576119e392506020820151906060604084015193015160001a90611ac8565b9192909190565b505060009160029190565b9190916004811015611ab25780611a0b57509050565b600060018203611a3f577ff645eedf0000000000000000000000000000000000000000000000000000000060005260046000fd5b5060028103611a7657827ffce698f70000000000000000000000000000000000000000000000000000000060005260045260246000fd5b9091600360009214611a86575050565b602492507fd78bce0c000000000000000000000000000000000000000000000000000000008252600452fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611b52579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa156111575760005173ffffffffffffffffffffffffffffffffffffffff811615611b465790600090600090565b50600090600190600090565b5050506000916003919056fea26469706673582212201671f1c43dc5c8346d69577e963c6aabefb6c83c0455b001df73dd691166b3ee64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10B0258C EQ PUSH2 0x13A4 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x134D JUMPI DUP1 PUSH4 0x3F96591F EQ PUSH2 0x1220 JUMPI DUP1 PUSH4 0x40C7D18F EQ PUSH2 0x11EC JUMPI DUP1 PUSH4 0x6DD5BE81 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x4E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x8DE1ECB2 EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x8F7A844B EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xC3713CAD EQ PUSH2 0x141 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH2 0xEB DUP2 CALLER EQ PUSH2 0x14C1 JUMP JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x198 DUP2 PUSH2 0x18E1 JUMP JUMPDEST SWAP2 PUSH2 0x1A6 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x150C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD DUP1 SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x372 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 ADD SWAP2 DUP6 MSTORE PUSH1 0x60 PUSH1 0x20 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH1 0x80 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x225 JUMPI POP POP POP POP PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 SWAP5 SWAP1 SWAP3 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 SWAP1 DUP3 SUB ADD DUP3 MSTORE DUP6 MLOAD SWAP1 PUSH2 0x120 DUP2 ADD DUP3 MLOAD SWAP1 PUSH2 0x120 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH2 0x140 DUP4 ADD SWAP1 PUSH1 0x20 PUSH2 0x140 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x32B JUMPI POP POP POP POP PUSH2 0x31A DUP4 PUSH1 0x20 SWAP4 PUSH2 0x100 PUSH2 0x2F4 PUSH2 0x2E2 PUSH2 0x2C6 PUSH2 0x2B4 DUP10 SWAP9 DUP10 PUSH1 0x1 SWAP13 ADD MLOAD DUP8 DUP3 SUB DUP12 DUP10 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE ADD MLOAD SWAP1 PUSH2 0x100 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x149C JUMP JUMPDEST SWAP8 ADD SWAP3 ADD SWAP3 ADD DUP7 SWAP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0x211 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH1 0x20 DUP1 PUSH2 0x366 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC0 DUP11 PUSH1 0x1 SWAP7 SUB ADD DUP8 MSTORE DUP9 MLOAD PUSH2 0x149C JUMP JUMPDEST SWAP7 ADD SWAP5 SWAP4 ADD SWAP2 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x40 SWAP8 SWAP5 SWAP6 SWAP7 SWAP8 MLOAD PUSH2 0x120 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47B JUMPI PUSH1 0x40 MSTORE DUP5 SLOAD PUSH2 0x3A0 DUP2 PUSH2 0x18E1 JUMP JUMPDEST SWAP1 PUSH2 0x3AE PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x150C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x45E JUMPI POP POP POP POP PUSH1 0x1 SWAP3 DUP3 PUSH1 0x20 SWAP3 PUSH1 0x9 SWAP5 MSTORE PUSH2 0x3E4 DUP6 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x3F4 PUSH1 0x2 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP9 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x40F PUSH1 0x4 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x420 PUSH1 0x5 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x445 PUSH1 0x8 DUP10 ADD PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP2 ADD SWAP1 SWAP3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP7 PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 PUSH2 0x46D DUP7 PUSH2 0x18F9 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x3C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND CALLER SUB PUSH2 0x584 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x0 SLOAD SWAP2 CALLER DUP3 DUP5 AND OR PUSH1 0x0 SSTORE AND PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x13C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x13C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x13C JUMPI PUSH1 0x24 DUP3 ADD SWAP2 PUSH1 0x24 CALLDATASIZE SWAP2 DUP4 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x13C JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x13C JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x13C JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x13C JUMPI CALLDATASIZE PUSH1 0x24 DUP7 DUP4 ADD ADD GT PUSH2 0x13C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH32 0x4FF6338C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP1 PUSH2 0x6B4 DUP9 DUP12 DUP12 PUSH1 0x4 DUP6 ADD PUSH2 0x1582 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL DUP1 ISZERO PUSH2 0x1157 JUMPI PUSH2 0x11BD JUMPI JUMPDEST POP DUP4 ISZERO PUSH2 0x11A7 JUMPI PUSH1 0x60 PUSH2 0x6D6 DUP5 DUP1 PUSH2 0x1793 JUMP JUMPDEST ADD CALLDATALOAD PUSH1 0x7 SLOAD SUB PUSH2 0x1163 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH1 0x20 PUSH1 0x0 PUSH2 0x727 PUSH1 0x40 MLOAD DUP4 DUP2 ADD SWAP1 CALLER DUP3 MSTORE CHAINID PUSH1 0x40 DUP3 ADD MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE DUP7 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x80 DUP2 MSTORE PUSH2 0x716 PUSH1 0xA0 DUP3 PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1479 JUMP JUMPDEST DUP2 ADD SUB SWAP1 PUSH1 0x2 GAS STATICCALL ISZERO PUSH2 0x1157 JUMPI PUSH2 0x75C SWAP6 PUSH2 0x74D PUSH2 0x753 SWAP3 PUSH1 0x0 MLOAD SWAP3 PUSH1 0x24 CALLDATASIZE SWAP3 ADD PUSH2 0x17C6 JUMP JUMPDEST SWAP1 PUSH2 0x19B9 JUMP JUMPDEST SWAP1 SWAP7 SWAP2 SWAP7 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x0 SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x796 PUSH2 0x78F PUSH2 0x785 DUP9 DUP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 PUSH2 0x180D JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 AND SWAP2 AND SUB PUSH2 0x1113 JUMPI PUSH1 0x0 NOT DUP2 EQ PUSH2 0x10FF JUMPI PUSH1 0x1 ADD PUSH1 0x6 SSTORE PUSH1 0x3 SLOAD SWAP3 CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP6 AND OR PUSH1 0x3 SSTORE PUSH9 0x10000000000000000 DUP2 GT PUSH2 0x10EB JUMPI PUSH1 0x4 SLOAD DUP2 PUSH1 0x4 SSTORE DUP1 DUP3 LT PUSH2 0xFC1 JUMPI JUMPDEST POP PUSH1 0x4 DUP6 MSTORE DUP5 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x887 JUMPI POP POP POP SWAP1 PUSH32 0x2FF02E3194F5700F91A1E89169623293CDF4B5529C368E4810B3B8593203C8CC SWAP2 DUP2 PUSH1 0x5 SSTORE PUSH2 0x881 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER SWAP9 AND SWAP7 DUP5 PUSH2 0x1582 JUMP JUMPDEST SUB SWAP1 LOG3 DUP1 RETURN JUMPDEST PUSH2 0x891 DUP2 DUP8 PUSH2 0x1793 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xFBD JUMPI DUP2 ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xFB9 JUMPI PUSH1 0x20 ADD DUP2 PUSH1 0x5 SHL CALLDATASIZE SUB DUP2 SGT PUSH2 0xFB9 JUMPI PUSH9 0x10000000000000000 DUP3 GT PUSH2 0xBD8 JUMPI DUP5 SLOAD DUP3 DUP7 SSTORE DUP1 DUP4 LT PUSH2 0xF8C JUMPI JUMPDEST POP DUP1 DUP6 DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 SWAP2 DUP13 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xE5F JUMPI POP POP POP POP POP PUSH1 0x1 DUP4 ADD PUSH2 0x90B PUSH1 0x20 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0x925 DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xE2F JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xDCA JUMPI PUSH2 0x95C SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP4 ADD PUSH2 0x970 PUSH1 0x40 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0x98A DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD9A JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD35 JUMPI PUSH2 0x9C0 SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x9DE PUSH1 0x80 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0x9F8 DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xD05 JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xCA0 JUMPI PUSH2 0xA2E SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x5 DUP4 ADD PUSH2 0xA42 PUSH1 0xA0 DUP4 ADD DUP4 PUSH2 0x180D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC8C JUMPI DUP12 PUSH2 0xA5C DUP5 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC5C JUMPI JUMPDEST POP SWAP2 DUP13 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBF7 JUMPI PUSH2 0xA92 SWAP4 SWAP1 SWAP2 DUP4 PUSH2 0xBEC JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH2 0xABC PUSH1 0x8 DUP5 ADD SWAP2 PUSH2 0x100 DUP2 ADD SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xBD8 JUMPI PUSH2 0xAD6 DUP4 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB9D JUMPI JUMPDEST POP DUP11 SWAP1 DUP12 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xB31 JUMPI DUP4 PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP8 SWAP5 PUSH1 0x9 SWAP8 SWAP5 PUSH2 0xB17 SWAP5 SWAP3 PUSH2 0xB26 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x828 JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP16 DUP1 PUSH2 0x948 JUMP JUMPDEST POP DUP4 DUP13 MSTORE PUSH1 0x20 DUP13 KECCAK256 SWAP2 PUSH1 0x1F NOT DUP5 AND DUP14 JUMPDEST DUP2 DUP2 LT PUSH2 0xB85 JUMPI POP SWAP4 PUSH1 0x1 SWAP7 SWAP4 PUSH1 0x9 SWAP7 SWAP4 DUP9 SWAP4 DUP4 PUSH1 0x20 SWAP9 LT PUSH2 0xB6B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0xB5E JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xB41 JUMP JUMPDEST PUSH2 0xBC8 SWAP1 DUP5 DUP14 MSTORE PUSH1 0x20 DUP14 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBCE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 PUSH2 0xADF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x24 DUP12 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST ADD CALLDATALOAD SWAP1 POP DUP14 DUP1 PUSH2 0x948 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xC44 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xC2A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xC1D JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xC07 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xC85 SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x24 DUP13 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xCED JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xCD3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xCC6 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xD2E SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0xA01 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xD82 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xD68 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x9C3 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xD5B JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xD45 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xDC3 SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0x993 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1F NOT DUP5 AND DUP6 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xE17 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0xDFD JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x95F JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0xDF0 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x20 DUP3 DUP7 PUSH2 0xE58 SWAP5 MSTORE KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST DUP12 DUP14 PUSH2 0x92E JUMP JUMPDEST PUSH2 0xE69 DUP2 DUP4 PUSH2 0x180D JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xF77 JUMPI DUP16 SWAP1 PUSH2 0xE85 DUP8 SLOAD PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xF47 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xEDD JUMPI DUP4 PUSH1 0x1 SWAP6 SWAP3 SWAP5 PUSH1 0x20 SWAP5 DUP8 SWAP7 PUSH2 0xEC3 SWAP5 SWAP3 PUSH2 0xED2 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST DUP8 SSTORE JUMPDEST ADD SWAP5 ADD SWAP3 ADD SWAP2 SWAP3 PUSH2 0x8EE JUMP JUMPDEST ADD CALLDATALOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x948 JUMP JUMPDEST SWAP2 PUSH1 0x1F NOT DUP5 AND DUP9 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0xF2F JUMPI POP SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP7 SWAP4 DUP8 SWAP7 SWAP4 DUP4 DUP9 SWAP6 LT PUSH2 0xF15 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP8 SSTORE PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 NOT PUSH1 0xF8 DUP6 PUSH1 0x3 SHL AND SHR NOT SWAP2 ADD CALLDATALOAD AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xF08 JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP8 ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0xEEC JUMP JUMPDEST PUSH2 0xF71 SWAP1 DUP9 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP8 LT PUSH2 0xBCE JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x187A JUMP JUMPDEST CODESIZE PUSH2 0xE8E JUMP JUMPDEST POP PUSH1 0x24 DUP16 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP6 DUP13 MSTORE DUP3 PUSH1 0x20 DUP14 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD JUMPDEST DUP2 DUP2 LT PUSH2 0xFA7 JUMPI POP PUSH2 0x8E1 JUMP JUMPDEST DUP1 PUSH2 0xFB3 PUSH1 0x1 SWAP3 PUSH2 0x1891 JUMP JUMPDEST ADD PUSH2 0xF9A JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x9 MUL SWAP1 PUSH1 0x9 DUP3 DIV SUB PUSH2 0x10D7 JUMPI DUP2 PUSH1 0x9 MUL SWAP1 PUSH1 0x9 DUP3 DIV DUP4 SUB PUSH2 0x10C3 JUMPI PUSH1 0x4 DUP8 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD JUMPDEST DUP2 DUP2 LT PUSH2 0x1035 JUMPI POP PUSH2 0x7FF JUMP JUMPDEST DUP1 SLOAD DUP8 DUP3 SSTORE DUP1 PUSH2 0x1098 JUMPI JUMPDEST POP DUP1 PUSH2 0x1050 PUSH1 0x1 PUSH1 0x9 SWAP4 ADD PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x105C PUSH1 0x2 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST DUP8 PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x106E PUSH1 0x4 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x107A PUSH1 0x5 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST DUP8 PUSH1 0x6 DUP3 ADD SSTORE DUP8 PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x1092 PUSH1 0x8 DUP3 ADD PUSH2 0x1891 JUMP JUMPDEST ADD PUSH2 0x1028 JUMP JUMPDEST DUP2 DUP9 MSTORE PUSH1 0x20 DUP9 KECCAK256 SWAP1 DUP2 ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x10B1 JUMPI POP PUSH2 0x1040 JUMP JUMPDEST DUP1 PUSH2 0x10BD PUSH1 0x1 SWAP3 PUSH2 0x1891 JUMP JUMPDEST ADD PUSH2 0x10A4 JUMP JUMPDEST PUSH1 0x24 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642064617461207369676E617475726500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F72697A656420736F6C7574696F6E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11E4 JUMPI JUMPDEST DUP2 PUSH2 0x11D6 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x150C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x13C JUMPI MLOAD PUSH2 0x6C3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x11C9 JUMP JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH2 0x1275 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x14C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12E3 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH32 0xC8B1D729EA7C9A12C8EBCAF5BBB64F5A001F331261D068920947589040A2D954 PUSH1 0x0 DUP1 LOG3 AND OR PUSH1 0x2 SSTORE STOP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6365727456657269666965722063616E6E6F74206265207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x13C JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13C JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x13C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x13DB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x14C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x140F JUMPI DUP1 PUSH1 0x7 SLOAD PUSH32 0xB134F848761A2F3E71DE218780593A57AD2BD1AB2139BEDE1C142CA96C822599 PUSH1 0x0 DUP1 LOG3 PUSH1 0x7 SSTORE STOP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417574686F72697A6564536F6C7574696F6E486173682063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x148C JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x147C JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x14BA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x1479 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x14C8 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x47B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH1 0x1F NOT SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD PUSH1 0x1E NOT DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x13C JUMPI ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x13C JUMPI DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x13C JUMPI JUMP JUMPDEST SWAP4 SWAP3 SWAP2 DUP1 PUSH1 0x40 DUP7 ADD PUSH1 0x40 DUP8 MSTORE MSTORE PUSH1 0x60 DUP6 ADD PUSH1 0x60 DUP3 PUSH1 0x5 SHL DUP8 ADD ADD SWAP2 DUP4 PUSH1 0x0 SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEE1 DUP2 CALLDATASIZE SUB ADD JUMPDEST DUP4 DUP4 LT PUSH2 0x15DC JUMPI POP POP POP POP POP PUSH1 0x20 SWAP2 POP SWAP4 ADD MSTORE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA0 DUP11 DUP3 SUB ADD DUP7 MSTORE DUP7 CALLDATALOAD DUP3 DUP2 SLT ISZERO PUSH2 0x13C JUMPI DUP4 ADD SWAP1 PUSH2 0x120 DUP2 ADD DUP3 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x13C JUMPI DUP4 ADD PUSH1 0x20 DUP2 CALLDATALOAD SWAP2 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x13C JUMPI DUP2 PUSH1 0x5 SHL SWAP1 DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0x13C JUMPI PUSH2 0x120 DUP6 MSTORE DUP3 SWAP1 MSTORE DUP4 ADD PUSH2 0x140 SWAP1 DUP2 ADD SWAP3 SWAP2 SWAP1 DUP5 ADD DUP3 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1741 JUMPI POP POP POP POP POP PUSH2 0x1732 DUP4 PUSH1 0x20 SWAP4 PUSH2 0x1723 PUSH2 0x1703 PUSH2 0x16E8 PUSH2 0x16C3 PUSH2 0x16A8 DUP10 SWAP9 PUSH2 0x169B DUP11 PUSH1 0x1 SWAP14 ADD DUP10 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP9 DUP4 SUB DUP13 DUP11 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST PUSH2 0x16B5 PUSH1 0x40 DUP9 ADD DUP9 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP8 DUP4 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x16DA PUSH1 0x80 DUP8 ADD DUP8 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP7 DUP4 SUB PUSH1 0x80 DUP9 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST PUSH2 0x16F5 PUSH1 0xA0 DUP7 ADD DUP7 PUSH2 0x1550 JUMP JUMPDEST SWAP1 DUP6 DUP4 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST SWAP3 PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP2 ADD SWAP1 PUSH2 0x1550 JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP2 DUP6 SUB SWAP2 ADD MSTORE PUSH2 0x152F JUMP JUMPDEST SWAP9 ADD SWAP8 SWAP7 ADD SWAP5 SWAP4 ADD SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 PUSH1 0x20 DUP1 PUSH2 0x1786 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC0 DUP12 PUSH1 0x1 SWAP7 SUB ADD DUP9 MSTORE PUSH2 0x1780 DUP11 DUP9 PUSH2 0x1550 JUMP JUMPDEST SWAP1 PUSH2 0x152F JUMP JUMPDEST SWAP8 ADD SWAP6 SWAP5 ADD SWAP3 SWAP2 ADD PUSH2 0x1669 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x13C JUMPI ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x17F0 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0x150C JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x13C JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0x13C JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x13C JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0x13C JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1870 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x185A JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x184F JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x1885 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x187A JUMP JUMPDEST PUSH2 0x189B DUP2 SLOAD PUSH2 0x1840 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x18A5 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x18B8 JUMPI POP SSTORE JUMPDEST JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x18D4 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x187A JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x47B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x190D DUP5 PUSH2 0x1840 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1979 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1932 JUMPI JUMPDEST POP PUSH2 0x18B6 SWAP3 POP SUB DUP4 PUSH2 0x150C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x195D JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x18B6 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x20 SWAP4 POP PUSH2 0x18B6 SWAP6 SWAP3 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x1925 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x19EA JUMPI PUSH2 0x19E3 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1AB2 JUMPI DUP1 PUSH2 0x1A0B JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x1A3F JUMPI PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x1A76 JUMPI DUP3 PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x1A86 JUMPI POP POP JUMP JUMPDEST PUSH1 0x24 SWAP3 POP PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1B52 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1157 JUMPI PUSH1 0x0 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x1B46 JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH18 0xF1C43DC5C8346D69577E963C6AABEFB6C83C DIV SSTORE 0xB0 ADD 0xDF PUSH20 0xDD691166B3EE64736F6C634300081E0033000000 ",
              "sourceMap": "235:2977:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;1191:54:2;1199:10;;:19;1191:54;:::i;:::-;235:2977:1;;654:18:2;235:2977:1;;;654:18:2;235:2977:1;684:38:2;235:2977:1;684:38:2;;235:2977:1;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;2527:22;235:2977;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;2313:5;235:2977;;2330:10;235:2977;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2330:10;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2330:10;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;2313:5;235:2977;;;;;;;;;;;;:::i;:::-;;;;;;2330:10;235:2977;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;2630:14;235:2977;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;886:12:2;235:2977:1;;;;872:10:2;:26;235:2977:1;;;;;872:10:2;;235:2977:1;;;;;;;886:12:2;235:2977:1;;872:10:2;235:2977:1;;1032:42:2;235:2977:1;1032:42:2;;235:2977:1;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:12;235:2977;;;;;1440:54;;235:2977;1440:54;;;;;;;;235:2977;1440:54;;;:::i;:::-;;;;;;;;;;;235:2977;;;;;;;;;;;:::i;:::-;1508:23;235:2977;1533:22;235:2977;1508:47;235:2977;;1695:14;235:2977;;;;;;;1647:63;;;1607:10;;235:2977;;1667:13;235:2977;;;;1689:4;235:2977;;;;;;;;;;1647:63;;;;;;:::i;:::-;235:2977;;;;;;;;;;;;:::i;:::-;;;1640:71;;1440:12;1640:71;;;;;3927:8:0;1640:71:1;235:2977;3871:27:0;1640:71:1;235:2977;1640:71;235:2977;;;;;;:::i;:::-;3871:27:0;;:::i;:::-;3927:8;;;;;:::i;:::-;235:2977:1;;;;;1822:24;235:2977;;;;:::i;:::-;;1822:24;;;;:::i;:::-;235:2977;;;:::i;:::-;;;;;;1812:35;235:2977;;;1780:70;235:2977;;-1:-1:-1;;235:2977:1;;;;;;1695:14;235:2977;1922:5;235:2977;1607:10;;235:2977;;;;1922:5;235:2977;;;;;;;;;;;;;;;;;-1:-1:-1;235:2977:1;;;;;;;;;;;;;;;;2014:53;235:2977;;;;2014:53;235:2977;;1607:10;;;235:2977;1607:10;235:2977;;2014:53;;;:::i;:::-;;;;235:2977;;;;;;;:::i;:::-;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;1440:12;235:2977;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;1922:5;235:2977;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;1647:63;235:2977;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;1695:14;235:2977;;;;;;;1533:22;235:2977;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;235:2977:1;;;;;-1:-1:-1;235:2977:1;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;1922:5;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;235:2977:1;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;-1:-1:-1;235:2977:1;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;1922:5;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;1922:5;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;1922:5;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;1922:5;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;235:2977:1;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;1922:5;235:2977;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1440:12;235:2977;;;:::i;:::-;;1922:5;235:2977;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;1695:14;235:2977;;;;1533:22;235:2977;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;1640:71;235:2977;;;;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;1440:54;235:2977;1440:54;;235:2977;1440:54;;;;;;235:2977;1440:54;;;:::i;:::-;;;235:2977;;;;;1440:54;;;;;-1:-1:-1;1440:54:1;;235:2977;;;;;-1:-1:-1;;235:2977:1;;;;;;;2426:12;235:2977;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;1191:54:2;235:2977:1;;;;1199:10:2;:19;1191:54;:::i;:::-;2731:36:1;;235:2977;;;2833:12;235:2977;;;;;2817:44;235:2977;2817:44;;235:2977;;2833:12;235:2977;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;2158:5;235:2977;;2158:13;235:2977;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;1191:54:2;235:2977:1;;;;1199:10:2;:19;1191:54;:::i;:::-;2996:28:1;;235:2977;;;3102:22;235:2977;3076:74;235:2977;3076:74;;3102:22;235:2977;;;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;-1:-1:-1;235:2977:1;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;235:2977:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;235:2977:1;;;;;;:::o;:::-;;;;-1:-1:-1;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;-1:-1:-1;235:2977:1;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;235:2977:1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;235:2977:1;;;;;-1:-1:-1;235:2977:1;;-1:-1:-1;235:2977:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2129:778:0;235:2977:1;;;2129:778:0;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:0;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;;;;235:2977:1;;;;;;7366:29:0;;;7411:7;;;:::o;7362:444::-;7375:20;235:2977:1;7462:38:0;;235:2977:1;;7523:23:0;7375:20;7523:23;235:2977:1;7375:20:0;7523:23;7458:348;-1:-1:-1;7576:35:0;7567:44;;7576:35;;7634:46;;7375:20;7634:46;235:2977:1;;;7375:20:0;7634:46;7563:243;235:2977:1;;7710:30:0;7375:20;7701:39;;7697:109;;7563:243;;7280:532::o;7697:109::-;235:2977:1;7763:32:0;;;;;235:2977:1;;7763:32:0;235:2977:1;-1:-1:-1;;;7375:20:0;235:2977:1;;;;;7375:20:0;235:2977:1;5203:1551:0;;;6283:66;6270:79;;6266:164;;235:2977:1;;;;;;-1:-1:-1;235:2977:1;;;;;;;;;;;;;;;;;;;6541:24:0;;;;;;;;;-1:-1:-1;6541:24:0;235:2977:1;;;6579:20:0;6575:113;;6698:49;-1:-1:-1;6698:49:0;-1:-1:-1;5203:1551:0;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:0;6541:24;6615:62;-1:-1:-1;6615:62:0;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o"
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "addAdmin((bytes[],bytes,bytes,bytes32,bytes,bytes,bytes32,bytes32,bytes)[],uint256,bytes)": "6dd5be81",
              "getAdminData()": "8f7a844b",
              "getAuthorizedSolutionHash()": "c3713cad",
              "getCertVerifier()": "40c7d18f",
              "getSignatureNonce()": "8de1ecb2",
              "isAdmin(address)": "24d7806c",
              "owner()": "8da5cb5b",
              "setAuthorizedSolutionHash(bytes32)": "10b0258c",
              "setCertVerifier(address)": "3f96591f",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICertVerifier\",\"name\":\"_certVerifier\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_authorizedSolutionHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ICertVerifier\",\"name\":\"oldCertVerifier\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ICertVerifier\",\"name\":\"newCertVerifier\",\"type\":\"address\"}],\"name\":\"CertVerifierSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes[]\",\"name\":\"nonSerializedParts\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"expirationDate\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ca\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"userData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"serialNumber\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mrEnclave\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mrSigner\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct ChunkedX509Cert[]\",\"name\":\"certsChain\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rootCertId\",\"type\":\"uint256\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"oldAuthorizedSolutionHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAuthorizedSolutionHash\",\"type\":\"bytes32\"}],\"name\":\"SetAuthorizedSolutionHash\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes[]\",\"name\":\"nonSerializedParts\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"expirationDate\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ca\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"userData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"serialNumber\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mrEnclave\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mrSigner\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ChunkedX509Cert[]\",\"name\":\"_certsChain\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_rootCertId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes[]\",\"name\":\"nonSerializedParts\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"expirationDate\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ca\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"userData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"serialNumber\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mrEnclave\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mrSigner\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ChunkedX509Cert[]\",\"name\":\"_certsChain\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_rootCertId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuthorizedSolutionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCertVerifier\",\"outputs\":[{\"internalType\":\"contract ICertVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSignatureNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_authorizedSolutionHash\",\"type\":\"bytes32\"}],\"name\":\"setAuthorizedSolutionHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICertVerifier\",\"name\":\"_certVerifier\",\"type\":\"address\"}],\"name\":\"setCertVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/AdminCertificateHelper.sol\":\"AdminCertificateHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contract/AdminCertificateHelper.sol\":{\"keccak256\":\"0x8052f7e6636f79ee23101824c751075b1602b3a92b971ffe126194f935de36c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb071a9407745015ce16a10c23e22dcaaf5c4757d0a5e5d72d94c95b299b5824\",\"dweb:/ipfs/QmUXk3LHYUASBSszrrCaYkwdfVNvYAa7yct7Ar5yx6B2Gr\"]},\"contract/Owned.sol\":{\"keccak256\":\"0x5310b6a272519deaf2e6c68e23c3319c4a15238c97d1a9ea5b3c51e4d28d1d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64aa458069e644f674a9b568347b54468fb44604406d030af4882e37eafa89a\",\"dweb:/ipfs/QmQGuvvYvM2VmT5mGchniELnfmhNBwMiid4ki5WvcrxYdw\"]},\"contract/interfaces/IAdminCertificateHelper.sol\":{\"keccak256\":\"0xbb41ff166232561b1a947b1cb3003a83c0e2b97809f72953ae4d0d4130264f65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf32eef62a1490b11495477a3154a88fc14e322cb092e83262593a220ed29478\",\"dweb:/ipfs/Qmcw89aVW7TA3FNjhKmcuDcLTKo1FRaiG1EhELgVzHx8vP\"]},\"contract/interfaces/ICertVerifier.sol\":{\"keccak256\":\"0xd770214a657e44fa4f3517c60cc420eed8641188935068c72647513b5fcc9d22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b177078742a3febfea6af829cd03daf2a47cd0630203bbe48e4f4f407f270b65\",\"dweb:/ipfs/QmYMTU6rGYXWvRSiGGUXgr7CvBhQesvoktuVnuJfmgCEhC\"]},\"contract/types/ChunkedX509Cert.sol\":{\"keccak256\":\"0xca8c07cc53013d9d1fe70227ae504f906172aedce9bd65638a96764f5e38e462\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e683b53c98767ab4f8e43b5856eeb0e65f83e91353bfe805a82034342775f8d\",\"dweb:/ipfs/QmfBnqTMYQzokh6LNdw7TBmtHvWgti9wa1zjaN8gADsaqf\"]}},\"version\":1}"
        }
      },
      "contract/Owned.sol": {
        "Owned": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "acceptOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234602757600080546001600160a01b031916331790556102af908161002d8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816379ba50971461017a575080638da5cb5b146101465763f2fde38b1461004057600080fd5b346101415760206003193601126101415760043573ffffffffffffffffffffffffffffffffffffffff81168091036101415773ffffffffffffffffffffffffffffffffffffffff600054168033036100e357817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b600080fd5b3461014157600060031936011261014157602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b34610141576000600319360112610141576001549073ffffffffffffffffffffffffffffffffffffffff8216330361021d57507fffffffffffffffffffffffff00000000000000000000000000000000000000006000549133828416176000551660015573ffffffffffffffffffffffffffffffffffffffff3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fdfea26469706673582212208db48ba07f3f862cc718aad5f3d530b68453a42b309a7c3916769bdc8908e1ea64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x27 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2AF SWAP1 DUP2 PUSH2 0x2D DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x17A JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x141 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND DUP1 CALLER SUB PUSH2 0xE3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND CALLER SUB PUSH2 0x21D JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x0 SLOAD SWAP2 CALLER DUP3 DUP5 AND OR PUSH1 0x0 SSTORE AND PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST DUP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB4 DUP12 LOG0 PUSH32 0x3F862CC718AAD5F3D530B68453A42B309A7C3916769BDC8908E1EA64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "159:1101:2:-:0;;;;;;;439:27;159:1101;;-1:-1:-1;;;;;;159:1101:2;455:10;159:1101;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816379ba50971461017a575080638da5cb5b146101465763f2fde38b1461004057600080fd5b346101415760206003193601126101415760043573ffffffffffffffffffffffffffffffffffffffff81168091036101415773ffffffffffffffffffffffffffffffffffffffff600054168033036100e357817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278600080a3005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000006044820152fd5b600080fd5b3461014157600060031936011261014157602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b34610141576000600319360112610141576001549073ffffffffffffffffffffffffffffffffffffffff8216330361021d57507fffffffffffffffffffffffff00000000000000000000000000000000000000006000549133828416176000551660015573ffffffffffffffffffffffffffffffffffffffff3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b807f08c379a0000000000000000000000000000000000000000000000000000000006064925260206004820152601660248201527f4d7573742062652070726f706f736564206f776e6572000000000000000000006044820152fdfea26469706673582212208db48ba07f3f862cc718aad5f3d530b68453a42b309a7c3916769bdc8908e1ea64736f6c634300081e0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79BA5097 EQ PUSH2 0x17A JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x141 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND DUP1 CALLER SUB PUSH2 0xE3 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x141 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x141 JUMPI PUSH1 0x1 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND CALLER SUB PUSH2 0x21D JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x0 SLOAD SWAP2 CALLER DUP3 DUP5 AND OR PUSH1 0x0 SSTORE AND PUSH1 0x1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST DUP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 0xB4 DUP12 LOG0 PUSH32 0x3F862CC718AAD5F3D530B68453A42B309A7C3916769BDC8908E1EA64736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
              "sourceMap": "159:1101:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;159:1101:2;;;;;;;;;;;;;;;;;;;1199:10;;:19;159:1101;;;;654:18;159:1101;;;654:18;159:1101;684:38;159:1101;684:38;;159:1101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;159:1101:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;159:1101:2;;;;;886:12;159:1101;;;;;872:10;:26;159:1101;;;;;;872:10;;159:1101;;;;;;;886:12;159:1101;;872:10;159:1101;;1032:42;159:1101;1032:42;;159:1101;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "acceptOwnership()": "79ba5097",
              "owner()": "8da5cb5b",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"title\":\"The Owned contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/Owned.sol\":\"Owned\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contract/Owned.sol\":{\"keccak256\":\"0x5310b6a272519deaf2e6c68e23c3319c4a15238c97d1a9ea5b3c51e4d28d1d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64aa458069e644f674a9b568347b54468fb44604406d030af4882e37eafa89a\",\"dweb:/ipfs/QmQGuvvYvM2VmT5mGchniELnfmhNBwMiid4ki5WvcrxYdw\"]}},\"version\":1}"
        }
      },
      "contract/interfaces/IAdminCertificateHelper.sol": {
        "IAdminCertificateHelper": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "caller",
                  "type": "address"
                }
              ],
              "name": "isAdmin",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "isAdmin(address)": "24d7806c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/interfaces/IAdminCertificateHelper.sol\":\"IAdminCertificateHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contract/interfaces/IAdminCertificateHelper.sol\":{\"keccak256\":\"0xbb41ff166232561b1a947b1cb3003a83c0e2b97809f72953ae4d0d4130264f65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf32eef62a1490b11495477a3154a88fc14e322cb092e83262593a220ed29478\",\"dweb:/ipfs/Qmcw89aVW7TA3FNjhKmcuDcLTKo1FRaiG1EhELgVzHx8vP\"]}},\"version\":1}"
        }
      },
      "contract/interfaces/ICertVerifier.sol": {
        "ICertVerifier": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes[]",
                      "name": "nonSerializedParts",
                      "type": "bytes[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "expirationDate",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "ca",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userData",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "publicKey",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes",
                      "name": "serialNumber",
                      "type": "bytes"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrEnclave",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "mrSigner",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct ChunkedX509Cert[]",
                  "name": "certsChain",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "rootCertId",
                  "type": "uint256"
                }
              ],
              "name": "verifyCertChain",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "leafCertHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "verifyCertChain((bytes[],bytes,bytes,bytes32,bytes,bytes,bytes32,bytes32,bytes)[],uint256)": "4ff6338c"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes[]\",\"name\":\"nonSerializedParts\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"expirationDate\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ca\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"userData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"serialNumber\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mrEnclave\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mrSigner\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ChunkedX509Cert[]\",\"name\":\"certsChain\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"rootCertId\",\"type\":\"uint256\"}],\"name\":\"verifyCertChain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"leafCertHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/interfaces/ICertVerifier.sol\":\"ICertVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contract/interfaces/ICertVerifier.sol\":{\"keccak256\":\"0xd770214a657e44fa4f3517c60cc420eed8641188935068c72647513b5fcc9d22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b177078742a3febfea6af829cd03daf2a47cd0630203bbe48e4f4f407f270b65\",\"dweb:/ipfs/QmYMTU6rGYXWvRSiGGUXgr7CvBhQesvoktuVnuJfmgCEhC\"]},\"contract/types/ChunkedX509Cert.sol\":{\"keccak256\":\"0xca8c07cc53013d9d1fe70227ae504f906172aedce9bd65638a96764f5e38e462\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e683b53c98767ab4f8e43b5856eeb0e65f83e91353bfe805a82034342775f8d\",\"dweb:/ipfs/QmfBnqTMYQzokh6LNdw7TBmtHvWgti9wa1zjaN8gADsaqf\"]}},\"version\":1}"
        }
      }
    }
  }
}